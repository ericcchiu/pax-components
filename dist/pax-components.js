/******/ (function(modules) { // webpackBootstrap
/******/ 	// The module cache
/******/ 	var installedModules = {};
/******/
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/
/******/ 		// Check if module is in cache
/******/ 		if(installedModules[moduleId]) {
/******/ 			return installedModules[moduleId].exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = installedModules[moduleId] = {
/******/ 			i: moduleId,
/******/ 			l: false,
/******/ 			exports: {}
/******/ 		};
/******/
/******/ 		// Execute the module function
/******/ 		modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);
/******/
/******/ 		// Flag the module as loaded
/******/ 		module.l = true;
/******/
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/
/******/
/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = modules;
/******/
/******/ 	// expose the module cache
/******/ 	__webpack_require__.c = installedModules;
/******/
/******/ 	// define getter function for harmony exports
/******/ 	__webpack_require__.d = function(exports, name, getter) {
/******/ 		if(!__webpack_require__.o(exports, name)) {
/******/ 			Object.defineProperty(exports, name, { enumerable: true, get: getter });
/******/ 		}
/******/ 	};
/******/
/******/ 	// define __esModule on exports
/******/ 	__webpack_require__.r = function(exports) {
/******/ 		if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 			Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 		}
/******/ 		Object.defineProperty(exports, '__esModule', { value: true });
/******/ 	};
/******/
/******/ 	// create a fake namespace object
/******/ 	// mode & 1: value is a module id, require it
/******/ 	// mode & 2: merge all properties of value into the ns
/******/ 	// mode & 4: return value when already ns object
/******/ 	// mode & 8|1: behave like require
/******/ 	__webpack_require__.t = function(value, mode) {
/******/ 		if(mode & 1) value = __webpack_require__(value);
/******/ 		if(mode & 8) return value;
/******/ 		if((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;
/******/ 		var ns = Object.create(null);
/******/ 		__webpack_require__.r(ns);
/******/ 		Object.defineProperty(ns, 'default', { enumerable: true, value: value });
/******/ 		if(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));
/******/ 		return ns;
/******/ 	};
/******/
/******/ 	// getDefaultExport function for compatibility with non-harmony modules
/******/ 	__webpack_require__.n = function(module) {
/******/ 		var getter = module && module.__esModule ?
/******/ 			function getDefault() { return module['default']; } :
/******/ 			function getModuleExports() { return module; };
/******/ 		__webpack_require__.d(getter, 'a', getter);
/******/ 		return getter;
/******/ 	};
/******/
/******/ 	// Object.prototype.hasOwnProperty.call
/******/ 	__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };
/******/
/******/ 	// __webpack_public_path__
/******/ 	__webpack_require__.p = "";
/******/
/******/
/******/ 	// Load entry module and return exports
/******/ 	return __webpack_require__(__webpack_require__.s = "./src/index.js");
/******/ })
/************************************************************************/
/******/ ({

/***/ "./src/components/body/external.css":
/*!******************************************!*\
  !*** ./src/components/body/external.css ***!
  \******************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("// extracted by mini-css-extract-plugin\n\n//# sourceURL=webpack:///./src/components/body/external.css?");

/***/ }),

/***/ "./src/components/button/index.js":
/*!****************************************!*\
  !*** ./src/components/button/index.js ***!
  \****************************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("\n    document.addEventListener(\"DOMContentLoaded\", function (event) {\n      (function(){\n    var t=document.createElement('template');\n    t.setAttribute('id','mdw-button');\n    t.innerHTML=`\n    <style>\n      button {\n  -moz-osx-font-smoothing: grayscale;\n  -ms-flex-align: center;\n  -ms-flex-pack: center;\n  -webkit-appearance: none;\n  -webkit-box-sizing: border-box;\n  -webkit-font-smoothing: antialiased;\n  -webkit-tap-highlight-color: rgba(0, 0, 0, 0);\n  -webkit-user-select: none;\n     -moz-user-select: none;\n      -ms-user-select: none;\n          user-select: none;\n  align-items: center;\n  border: none;\n  border-radius: 4px;\n  box-sizing: border-box;\n  display: -ms-inline-flexbox;\n  display: inline-flex;\n  font-family: Roboto, sans-serif;\n  font-size: 0.875rem;\n  font-weight: 500;\n  height: 36px;\n  justify-content: center;\n  letter-spacing: 0.08929em;\n  line-height: 2.25rem;\n  min-width: 64px;\n  outline: none;\n  overflow: hidden;\n  padding: 0 8px 0 8px;\n  position: relative;\n  text-decoration: none;\n  text-transform: uppercase;\n  vertical-align: middle;\n  will-change: transform, opacity;\n}\n\nbutton::before, button::after {\n  position: absolute;\n  border-radius: 50%;\n  opacity: 0;\n  pointer-events: none;\n  content: \"\";\n  top: calc(50% - 100%);\n  left: calc(50% - 100%);\n  width: 200%;\n  height: 200%;\n}\n\nbutton::before {\n  -webkit-transition: opacity 15ms linear, background-color 15ms linear;\n  -o-transition: opacity 15ms linear, background-color 15ms linear;\n  transition: opacity 15ms linear, background-color 15ms linear;\n  z-index: 1;\n}\n\n\n/* basic */\n\nbutton {\n  color: inherit;\n  background-color: transparent;\n}\n\nbutton.raised,\nbutton.unelevated {\n  background-color: white;\n  color: inherit;\n}\n\nbutton.outlined {\n  border-color: rgba(0, 0, 0, 0.37);\n}\n\nbutton .ripple-element {\n  background-color: rgba(var(--mdw-theme-foreground--rgb), 0.16);\n}\n\nbutton::before, button::after {\n  background-color: var(--mdw-theme-foreground);\n}\n\n/* primary */\n\n:host(.primary) button {\n  color: var(--mdw-theme-primary);\n}\n\n:host(.primary) button.raised,\n:host(.primary) button.unelevated  {\n  background-color: var(--mdw-theme-primary);\n  color: var(--mdw-theme-primary--on);\n}\n\n:host(.primary) button.outlined {\n  border-color: var(--mdw-theme-primary);\n}\n\n:host(.primary) button .ripple-element {\n  background-color: rgba(var(--mdw-theme-primary--rgb), 0.16);\n}\n\n:host(.primary) button.raised .ripple-element,\n:host(.primary) button.unelevated .ripple-element {\n  background-color: rgba(var(--mdw-theme-background---rgb), 0.16);\n}\n\n:host(.primary) button::before, button::after {\n  background-color: var(--mdw-theme-primary);\n}\n\n/* secondary */\n\n:host(.secondary) button {\n  color: var(--mdw-theme-secondary);\n}\n\n:host(.secondary) button.raised,\n:host(.secondary) button.unelevated {\n  background-color: var(--mdw-theme-secondary);\n  color: var(--mdw-theme-secondary--on);\n}\n\n:host(.secondary) button.outlined {\n  border-color: var(--mdw-theme-secondary);\n}\n\n:host(.secondary) button .ripple-element {\n  background-color: rgba(var(--mdw-theme-secondary--rgb), 0.16);\n}\n\n:host(.secondary) button.raised .ripple-element,\n:host(.secondary) button.unelevated .ripple-element {\n  background-color: rgba(var(--mdw-theme-background---rgb), 0.16);\n}\n\n:host(.secondary) button::before, button::after {\n  background-color: var(--mdw-theme-secondary);\n}\n\n/* secondary */\n\n:host(.error) button {\n  color: var(--mdw-theme-error);\n}\n\n:host(.error) button.raised,\n:host(.error) button.unelevated {\n  background-color: var(--mdw-theme-error);\n  color: var(--mdw-theme-error--on);\n}\n\n:host(.error) button.outlined {\n  border-color: var(--mdw-theme-error);\n}\n\n:host(.error) button .ripple-element {\n  background-color: rgba(var(--mdw-theme-error--rgb), 0.16);\n}\n\n:host(.error) button.raised .ripple-element,\n:host(.error) button.unelevated .ripple-element {\n  background-color: rgba(var(--mdw-theme-background---rgb), 0.16);\n}\n\n:host(.error) button::before, button::after {\n  background-color: var(--mdw-theme-error);\n}\n\n:host(.show-spinner) button span.text {\n  opacity: 0;\n}\n\n\nbutton:disabled {\n  background-color: transparent;\n  color: rgba(var(--mdw-theme-surface--on-rgb), 0.37);\n  cursor: default;\n  pointer-events: none;\n}\n\nbutton::-moz-focus-inner {\n  padding: 0;\n  border: 0;\n}\n\nbutton:active {\n  outline: none;\n}\n\nbutton:hover {\n  cursor: pointer;\n}\n\nbutton:hover::before {\n  opacity: 0.04;\n}\n\n\n.outlined {\n  line-height: inherit;\n  border-style: solid;\n  padding: 0 14px 0 14px;\n  border-width: 2px;\n}\n\n.shaped {\n  border-radius: 18px;\n}\n\n.dense {\n  border-radius: 4px;\n  height: 32px;\n  font-size: .8125rem;\n  line-height: inherit;\n}\n\n.dense.shaped {\n  border-radius: 16px;\n}\n\nbutton .icon {\n  margin-left: 0;\n  margin-right: 8px;\n  display: inline-block;\n  width: 18px;\n  height: 18px;\n  font-size: 18px;\n  vertical-align: top;\n}\n\nsvg.icon {\n  fill: currentColor;\n}\n\n.raised,\n.unelevated {\n  padding: 0 16px 0 16px;\n}\n\n.raised:hover::before,\n.unelevated:hover::before {\n  opacity: 0.08;\n}\n\n.raised {\n  -webkit-box-shadow: 0px 3px 1px -2px rgba(0, 0, 0, 0.2), 0px 2px 2px 0px rgba(0, 0, 0, 0.14), 0px 1px 5px 0px rgba(0, 0, 0, 0.12);\n          box-shadow: 0px 3px 1px -2px rgba(0, 0, 0, 0.2), 0px 2px 2px 0px rgba(0, 0, 0, 0.14), 0px 1px 5px 0px rgba(0, 0, 0, 0.12);\n  -webkit-transition: -webkit-box-shadow 280ms cubic-bezier(0.4, 0, 0.2, 1);\n  transition: -webkit-box-shadow 280ms cubic-bezier(0.4, 0, 0.2, 1);\n  -o-transition: box-shadow 280ms cubic-bezier(0.4, 0, 0.2, 1);\n  transition: box-shadow 280ms cubic-bezier(0.4, 0, 0.2, 1);\n  transition: box-shadow 280ms cubic-bezier(0.4, 0, 0.2, 1), -webkit-box-shadow 280ms cubic-bezier(0.4, 0, 0.2, 1);\n}\n\n.raised:hover, .raised:focus {\n  -webkit-box-shadow: 0px 2px 4px -1px rgba(0, 0, 0, 0.2), 0px 4px 5px 0px rgba(0, 0, 0, 0.14), 0px 1px 10px 0px rgba(0, 0, 0, 0.12);\n          box-shadow: 0px 2px 4px -1px rgba(0, 0, 0, 0.2), 0px 4px 5px 0px rgba(0, 0, 0, 0.14), 0px 1px 10px 0px rgba(0, 0, 0, 0.12);\n}\n\n.raised:active {\n  -webkit-box-shadow: 0px 5px 5px -3px rgba(0, 0, 0, 0.2), 0px 8px 10px 1px rgba(0, 0, 0, 0.14), 0px 3px 14px 2px rgba(0, 0, 0, 0.12);\n          box-shadow: 0px 5px 5px -3px rgba(0, 0, 0, 0.2), 0px 8px 10px 1px rgba(0, 0, 0, 0.14), 0px 3px 14px 2px rgba(0, 0, 0, 0.12);\n}\n\n.raised:disabled {\n  -webkit-box-shadow: 0px 0px 0px 0px rgba(0, 0, 0, 0.2), 0px 0px 0px 0px rgba(0, 0, 0, 0.14), 0px 0px 0px 0px rgba(0, 0, 0, 0.12);\n          box-shadow: 0px 0px 0px 0px rgba(0, 0, 0, 0.2), 0px 0px 0px 0px rgba(0, 0, 0, 0.14), 0px 0px 0px 0px rgba(0, 0, 0, 0.12);\n}\n\n\n/* layout */\n\nbutton {\n  margin-left: 8px;\n  margin-right: 0;\n  margin-top: 6px;\n  margin-bottom: 6px;\n}\n\n/* [dir=\"rtl\"] button .icon, button .icon[dir=\"rtl\"] {\n  margin-left: 8px;\n  margin-right: 0;\n}\n\n.label + .icon {\n  margin-left: 8px;\n  margin-right: 0;\n}\n\n[dir=\"rtl\"] .label + .icon, .label + .icon[dir=\"rtl\"] {\n  margin-left: 0;\n  margin-right: 8px;\n}\n\n.raised .icon,\n.unelevated .icon,\n.outlined .icon {\n  margin-left: -4px;\n  margin-right: 8px;\n}\n\n[dir=\"rtl\"] .raised .icon, .raised .icon[dir=\"rtl\"], [dir=\"rtl\"]\n.unelevated .icon,\n.unelevated .icon[dir=\"rtl\"], [dir=\"rtl\"]\n.outlined .icon,\n.outlined .icon[dir=\"rtl\"] {\n  margin-left: 8px;\n  margin-right: -4px;\n}\n\n.raised .label + .icon,\n.unelevated .label + .icon,\n.outlined .label + .icon {\n  margin-left: 8px;\n  margin-right: -4px;\n}\n\n[dir=\"rtl\"] .raised .label + .icon, .raised .label + .icon[dir=\"rtl\"], [dir=\"rtl\"]\n.unelevated .label + .icon,\n.unelevated .label + .icon[dir=\"rtl\"], [dir=\"rtl\"]\n.outlined .label + .icon,\n.outlined .label + .icon[dir=\"rtl\"] {\n  margin-left: -4px;\n  margin-right: 8px;\n} */\n\n\n/* --- Ripple --- */\n.ripple {\n  overflow: hidden;\n}\n\n.ripple.ripple-unbounded {\n  overflow: visible;\n}\n\n.ripple-element {\n  position: absolute;\n  border-radius: 50%;\n  pointer-events: none;\n  transition: opacity, transform 0ms cubic-bezier(0, 0, 0.2, 1);\n  transform: scale(0);\n}\n\n.button-ripple,\n.button-focus-overlay {\n  border-radius: inherit;\n  position: absolute;\n  top: 0;\n  left: 0;\n  bottom: 0;\n  right: 0;\n  pointer-events: none;\n}\n\n    </style>\n    <render-block>\n      \n      <button>\n        <span class=\"text\"><slot></slot></span>\n        <span class=\"spinner-container\"></span>\n        <div class=\"ripple button-ripple\"></div>\n      </button>\n    \n    </render-block>\n    `;\n    document.body.insertAdjacentElement('beforeend', t);\n  }());\ncustomElements.define(\"mdw-button\", \n      class mdwButton extends HTMLElement {\n        \n    \n  // TODO impliment icon\n\n  \n    constructor() {\n    super();\n    this.cloneTemplate();\n    this.setupAsync();\n  }\n    \n\n  connectedCallback() {\n    this.ripple = new MDWRipple({\n      element: this.shadowRoot.querySelector('.ripple'),\n      triggerElement: this.button\n    });\n  }\n\n  static get observedAttributes() {\n    return ['raised', 'unelevated', 'outlined', 'disabled', 'icon', 'shaped', 'dense'];\n  }\n\n  attributeChangedCallback(name, oldValue, newValue) {\n    this[name] = newValue;\n  }\n\n  setupAsync() {\n    const asyncValue = this.getAttribute('async');\n    if (!asyncValue) return;\n    let pending = false;\n    this.button.addEventListener('click', event => {\n      event.preventDefault();\n      event.stopPropagation();\n\n      if (!pending) {\n        this.showSpinner();\n        pending = true;\n        eval(asyncValue)\n          .then(() => {\n            pending = false\n            this.hideSpinner();\n          })\n          .catch((e) => {\n            this.hideSpinner();\n            pending = false;\n            throw e;\n          });\n      }\n    });\n  }\n\n  showSpinner() {\n    this._showSpinner = true;\n    this.classList.add('show-spinner');\n    const isWhite = this.classList.contains('primary') || this.classList.contains('secondary') || this.classList.contains('error');\n    this.spinnerContainer.innerHTML = `<mdw-circular-progress mode=\"indeterminate\" class=\"${isWhite ? 'white' : 'grey'}\" diameter=\"24\" style=\"position: absolute; left: calc(50% - 12px); top: 6px;\"></mdw-circular-progress>`;\n  }\n\n  hideSpinner() {\n    this._showSpinner = false;\n    this.classList.remove('show-spinner');\n    this.spinnerContainer.innerHTML = '';\n  }\n\n  get spinnerContainer() {\n    if (!this._spinnerContainer) this._spinnerContainer = this.shadowRoot.querySelector('.spinner-container');\n    return this._spinnerContainer;\n  }\n\n  get button() {\n    if (!this._button) this._button = this.shadowRoot.querySelector('button');\n    return this._button;\n  }\n\n  set raised(value) {\n    this.button.classList.toggle('raised', !!value || value === '');\n  }\n\n  set unelevated(value) {\n    this.button.classList.toggle('unelevated', !!value|| value === '');\n  }\n\n  set outlined(value) {\n    this.button.classList.toggle('outlined', !!value || value === '');\n  }\n\n  set shaped(value) {\n    this.button.classList.toggle('shaped', !!value || value === '');\n  }\n\n  set dense(value) {\n    this.button.classList.toggle('dense', !!value || value === '');\n  }\n\n  set disabled(value) {\n    if (!!value || value === '') this.button.setAttribute('disabled', 'disabled');\n    else this.button.removeAttribute('disabled');\n  }\n\n  set icon(value) {\n    // this.shadowRoot.classList.toggle('md-disabled', !!value);\n  }\n\n  template() {\n    return html`\n      <button>\n        <span class=\"text\"><slot></slot></span>\n        <span class=\"spinner-container\"></span>\n        <div class=\"ripple button-ripple\"></div>\n      </button>\n    `;\n  }\n\n  cssFile() {\n    return 'src/components/button/internal.css'\n  }\n\n\n    css() { return \"\"; }\n    \n  \n\n        render() {\n          const renderBlock = this.shadowRoot.querySelector('render-block');\n          if (!renderBlock) throw Error('Could not find <render-block>');\n          renderBlock.innerHTML = this.template();\n        }\n\n        cloneTemplate(rerender = false) {\n          var template = document.getElementById('mdw-button');\n          var templateContent = template.content;\n          var shadowRoot = this.shadowRoot ? this.shadowRoot : this.attachShadow({mode: 'open'});\n          var clone = templateContent.cloneNode(true);\n          if (rerender) clone.querySelector('render-block').innerHTML = this.template();\n          shadowRoot.appendChild(clone);\n        }\n      }\n    );\n    });\n  \n\n//# sourceURL=webpack:///./src/components/button/index.js?");

/***/ }),

/***/ "./src/components/checkbox/index.js":
/*!******************************************!*\
  !*** ./src/components/checkbox/index.js ***!
  \******************************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("\n    document.addEventListener(\"DOMContentLoaded\", function (event) {\n      (function(){\n    var t=document.createElement('template');\n    t.setAttribute('id','mdw-checkbox');\n    t.innerHTML=`\n    <style>\n      .container {\n  -ms-flex: 0 0 18px;\n  -webkit-tap-highlight-color: rgba(0, 0, 0, 0);\n  -webkit-box-sizing: content-box;\n  box-sizing: content-box;\n  cursor: pointer;\n  display: inline-block;\n  flex: 0 0 18px;\n  height: 18px;\n  line-height: 0;\n  padding: 11px;\n  position: relative;\n  vertical-align: bottom;\n  white-space: nowrap;\n  width: 18px;\n  will-change: transform, opacity;\n}\n\n.container::before,\n.container::after {\n  position: absolute;\n  border-radius: 50%;\n  opacity: 0;\n  pointer-events: none;\n  content: \"\";\n  top: calc(50% - 50%);\n  left: calc(50% - 50%);\n  width: 100%;\n  height: 100%;\n}\n\n.container::before {\n  -webkit-transition: opacity 15ms linear, background-color 15ms linear;\n  -o-transition: opacity 15ms linear, background-color 15ms linear;\n  transition: opacity 15ms linear, background-color 15ms linear;\n  z-index: 1;\n}\n\n.container:hover::before {\n  opacity: 0.04;\n}\n\n.background::before {\n  position: absolute;\n  top: 0;\n  right: 0;\n  bottom: 0;\n  left: 0;\n  width: 100%;\n  height: 100%;\n  -webkit-transform: scale(0, 0);\n      -ms-transform: scale(0, 0);\n          transform: scale(0, 0);\n  -webkit-transition: opacity 90ms 0ms cubic-bezier(0.4, 0, 0.6, 1), -webkit-transform 90ms 0ms cubic-bezier(0.4, 0, 0.6, 1);\n  transition: opacity 90ms 0ms cubic-bezier(0.4, 0, 0.6, 1), -webkit-transform 90ms 0ms cubic-bezier(0.4, 0, 0.6, 1);\n  -o-transition: opacity 90ms 0ms cubic-bezier(0.4, 0, 0.6, 1), transform 90ms 0ms cubic-bezier(0.4, 0, 0.6, 1);\n  transition: opacity 90ms 0ms cubic-bezier(0.4, 0, 0.6, 1), transform 90ms 0ms cubic-bezier(0.4, 0, 0.6, 1);\n  transition: opacity 90ms 0ms cubic-bezier(0.4, 0, 0.6, 1), transform 90ms 0ms cubic-bezier(0.4, 0, 0.6, 1), -webkit-transform 90ms 0ms cubic-bezier(0.4, 0, 0.6, 1);\n  border-radius: 50%;\n  opacity: 0;\n  pointer-events: none;\n  content: \"\";\n  will-change: opacity, transform;\n}\n\n.background {\n  left: 11px;\n  right: initial;\n  display: -ms-inline-flexbox;\n  display: inline-flex;\n  position: absolute;\n  top: 11px;\n  bottom: 0;\n  -ms-flex-align: center;\n      align-items: center;\n  -ms-flex-pack: center;\n      justify-content: center;\n  -webkit-box-sizing: border-box;\n          box-sizing: border-box;\n  width: 45%;\n  height: 45%;\n  -webkit-transition: background-color 90ms 0ms cubic-bezier(0.4, 0, 0.6, 1), border-color 90ms 0ms cubic-bezier(0.4, 0, 0.6, 1);\n  -o-transition: background-color 90ms 0ms cubic-bezier(0.4, 0, 0.6, 1), border-color 90ms 0ms cubic-bezier(0.4, 0, 0.6, 1);\n  transition: background-color 90ms 0ms cubic-bezier(0.4, 0, 0.6, 1), border-color 90ms 0ms cubic-bezier(0.4, 0, 0.6, 1);\n  border: 2px solid currentColor;\n  border-radius: 2px;\n  background-color: transparent;\n  pointer-events: none;\n  will-change: background-color, border-color;\n}\n\n.container[dir=\"rtl\"] .background,\n[dir=\"rtl\"] .container .background {\n  left: initial;\n  right: 11px;\n}\n\n.checkmark {\n  position: absolute;\n  top: 0;\n  right: 0;\n  bottom: 0;\n  left: 0;\n  width: 100%;\n  -webkit-transition: opacity 180ms 0ms cubic-bezier(0.4, 0, 0.6, 1);\n  -o-transition: opacity 180ms 0ms cubic-bezier(0.4, 0, 0.6, 1);\n  transition: opacity 180ms 0ms cubic-bezier(0.4, 0, 0.6, 1);\n  opacity: 0;\n  color: #fff;\n}\n\n.mixedmark {\n  width: 100%;\n  height: 0;\n  -webkit-transform: scaleX(0) rotate(0deg);\n      -ms-transform: scaleX(0) rotate(0deg);\n          transform: scaleX(0) rotate(0deg);\n  -webkit-transition: opacity 90ms 0ms cubic-bezier(0.4, 0, 0.6, 1), -webkit-transform 90ms 0ms cubic-bezier(0.4, 0, 0.6, 1);\n  transition: opacity 90ms 0ms cubic-bezier(0.4, 0, 0.6, 1), -webkit-transform 90ms 0ms cubic-bezier(0.4, 0, 0.6, 1);\n  -o-transition: opacity 90ms 0ms cubic-bezier(0.4, 0, 0.6, 1), transform 90ms 0ms cubic-bezier(0.4, 0, 0.6, 1);\n  transition: opacity 90ms 0ms cubic-bezier(0.4, 0, 0.6, 1), transform 90ms 0ms cubic-bezier(0.4, 0, 0.6, 1);\n  transition: opacity 90ms 0ms cubic-bezier(0.4, 0, 0.6, 1), transform 90ms 0ms cubic-bezier(0.4, 0, 0.6, 1), -webkit-transform 90ms 0ms cubic-bezier(0.4, 0, 0.6, 1);\n  border-width: 1px;\n  border-style: solid;\n  opacity: 0;\n  border-color: #fff;\n}\n\n@media screen and (-ms-high-contrast: active) {\n  .mixedmark {\n    margin: 0 1px;\n  }\n}\n\npath {\n  -webkit-transition: stroke-dashoffset 180ms 0ms cubic-bezier(0.4, 0, 0.6, 1);\n  -o-transition: stroke-dashoffset 180ms 0ms cubic-bezier(0.4, 0, 0.6, 1);\n  transition: stroke-dashoffset 180ms 0ms cubic-bezier(0.4, 0, 0.6, 1);\n  stroke: currentColor;\n  stroke-width: 3.12px;\n  stroke-dashoffset: 29.78334;\n  stroke-dasharray: 29.78334;\n}\n\ninput {\n  position: absolute;\n  top: 0;\n  left: 0;\n  width: 100%;\n  height: 100%;\n  margin: 0;\n  padding: 0;\n  opacity: 0;\n  cursor: inherit;\n}\n\ninput:enabled:not(:checked):not(:indeterminate) ~ .background {\n  border-color: rgba(0, 0, 0, 0.54);\n  background-color: transparent;\n}\n\ninput:disabled:not(:checked):not(:indeterminate) ~ .background {\n  border-color: rgba(0, 0, 0, 0.26);\n}\n\ninput:disabled:checked ~ .background,\ninput:disabled:indeterminate ~ .background {\n  border-color: transparent;\n  background-color: rgba(0, 0, 0, 0.26);\n}\n\ninput:checked ~ .background,\ninput:indeterminate ~ .background {\n  -webkit-transition: border-color 90ms 0ms cubic-bezier(0, 0, 0.2, 1), background-color 90ms 0ms cubic-bezier(0, 0, 0.2, 1);\n  -o-transition: border-color 90ms 0ms cubic-bezier(0, 0, 0.2, 1), background-color 90ms 0ms cubic-bezier(0, 0, 0.2, 1);\n  transition: border-color 90ms 0ms cubic-bezier(0, 0, 0.2, 1), background-color 90ms 0ms cubic-bezier(0, 0, 0.2, 1);\n}\n\ninput:checked ~ .background path,\ninput:indeterminate ~ .background path {\n  stroke-dashoffset: 0;\n}\n\ninput:focus ~ .background::before {\n  -webkit-transform: scale(2.75, 2.75);\n      -ms-transform: scale(2.75, 2.75);\n          transform: scale(2.75, 2.75);\n  -webkit-transition: opacity 80ms 0ms cubic-bezier(0, 0, 0.2, 1), -webkit-transform 80ms 0ms cubic-bezier(0, 0, 0.2, 1);\n  transition: opacity 80ms 0ms cubic-bezier(0, 0, 0.2, 1), -webkit-transform 80ms 0ms cubic-bezier(0, 0, 0.2, 1);\n  -o-transition: opacity 80ms 0ms cubic-bezier(0, 0, 0.2, 1), transform 80ms 0ms cubic-bezier(0, 0, 0.2, 1);\n  transition: opacity 80ms 0ms cubic-bezier(0, 0, 0.2, 1), transform 80ms 0ms cubic-bezier(0, 0, 0.2, 1);\n  transition: opacity 80ms 0ms cubic-bezier(0, 0, 0.2, 1), transform 80ms 0ms cubic-bezier(0, 0, 0.2, 1), -webkit-transform 80ms 0ms cubic-bezier(0, 0, 0.2, 1);\n  opacity: 0.12;\n}\n\ninput:disabled {\n  cursor: default;\n  pointer-events: none;\n}\n\ninput:checked ~ .background .checkmark {\n  -webkit-transition: opacity 180ms 0ms cubic-bezier(0, 0, 0.2, 1), -webkit-transform 180ms 0ms cubic-bezier(0, 0, 0.2, 1);\n  transition: opacity 180ms 0ms cubic-bezier(0, 0, 0.2, 1), -webkit-transform 180ms 0ms cubic-bezier(0, 0, 0.2, 1);\n  -o-transition: opacity 180ms 0ms cubic-bezier(0, 0, 0.2, 1), transform 180ms 0ms cubic-bezier(0, 0, 0.2, 1);\n  transition: opacity 180ms 0ms cubic-bezier(0, 0, 0.2, 1), transform 180ms 0ms cubic-bezier(0, 0, 0.2, 1);\n  transition: opacity 180ms 0ms cubic-bezier(0, 0, 0.2, 1), transform 180ms 0ms cubic-bezier(0, 0, 0.2, 1), -webkit-transform 180ms 0ms cubic-bezier(0, 0, 0.2, 1);\n  opacity: 1;\n}\n\ninput:checked ~ .background .mixedmark {\n  -webkit-transform: scaleX(1) rotate(-45deg);\n      -ms-transform: scaleX(1) rotate(-45deg);\n          transform: scaleX(1) rotate(-45deg);\n}\n\ninput:indeterminate ~ .background .checkmark {\n  -webkit-transform: rotate(45deg);\n      -ms-transform: rotate(45deg);\n          transform: rotate(45deg);\n  -webkit-transition: opacity 90ms 0ms cubic-bezier(0.4, 0, 0.6, 1), -webkit-transform 90ms 0ms cubic-bezier(0.4, 0, 0.6, 1);\n  transition: opacity 90ms 0ms cubic-bezier(0.4, 0, 0.6, 1), -webkit-transform 90ms 0ms cubic-bezier(0.4, 0, 0.6, 1);\n  -o-transition: opacity 90ms 0ms cubic-bezier(0.4, 0, 0.6, 1), transform 90ms 0ms cubic-bezier(0.4, 0, 0.6, 1);\n  transition: opacity 90ms 0ms cubic-bezier(0.4, 0, 0.6, 1), transform 90ms 0ms cubic-bezier(0.4, 0, 0.6, 1);\n  transition: opacity 90ms 0ms cubic-bezier(0.4, 0, 0.6, 1), transform 90ms 0ms cubic-bezier(0.4, 0, 0.6, 1), -webkit-transform 90ms 0ms cubic-bezier(0.4, 0, 0.6, 1);\n  opacity: 0;\n}\n\ninput:indeterminate ~ .background .mixedmark {\n  -webkit-transform: scaleX(1) rotate(0deg);\n      -ms-transform: scaleX(1) rotate(0deg);\n          transform: scaleX(1) rotate(0deg);\n  opacity: 1;\n}\n\n\n\n/* --- Ripple --- */\n.ripple {\n  overflow: hidden;\n}\n\n.ripple.ripple-unbounded {\n  overflow: visible;\n}\n\n.ripple-element {\n  position: absolute;\n  border-radius: 50%;\n  pointer-events: none;\n  transition: opacity, transform 0ms cubic-bezier(0, 0, 0.2, 1);\n  transform: scale(0)\n}\n\n.checkbox-ripple {\n  position: absolute;\n  left: 0;\n  top: 0;\n  right: 0;\n  bottom: 0;\n  border-radius: 50%;\n  z-index: 1;\n  pointer-events: none;\n}\n\n\n/* --- theme --- */\n\n/* basic */\n.container::before,\n.container::after {\n  background-color: var(--mdw-theme-secondary);\n}\n\n.ripple-element {\n  background-color: rgba(var(--mdw-theme-secondary--rgb), 0.16);\n}\n\ninput:enabled:checked ~ .background,\ninput:enabled:indeterminate ~ .background {\n  border-color: var(--mdw-theme-secondary);\n  background-color: var(--mdw-theme-secondary);\n}\n\n/* primary */\n:host(.primary) .container::before,\n:host(.primary) .container::after {\n  background-color: var(--mdw-theme-primary);\n}\n\n:host(.primary) .ripple-element {\n  background-color: rgba(var(--mdw-theme-primary--rgb), 0.16);\n}\n\n:host(.primary) input:enabled:checked ~ .background,\n:host(.primary) input:enabled:indeterminate ~ .background {\n  border-color: var(--mdw-theme-primary);\n  background-color: var(--mdw-theme-primary);\n}\n\n/* error */\n:host(.error) .container::before,\n:host(.error) .container::after {\n  background-color: var(--mdw-theme-error);\n}\n\n:host(.error) .ripple-element {\n  background-color: rgba(var(--mdw-theme-error--rgb), 0.16);\n}\n\n:host(.error) input:enabled:checked ~ .background,\n:host(.error) input:enabled:indeterminate ~ .background {\n  border-color: var(--mdw-theme-error);\n  background-color: var(--mdw-theme-error);\n}\n\n    </style>\n    <render-block>\n      \n      <div class=\"container\">\n        <input type=\"checkbox\" onchange=\"this.getRootNode().host.handleChange(this)\">\n        <div class=\"ripple checkbox-ripple\"></div>\n        <div class=\"background\">\n          <svg class=\"checkmark\" viewBox=\"0 0 24 24\">\n            <path fill=\"none\" d=\"M1.73,12.91 8.1,19.28 22.79,4.59\" />\n          </svg>\n          <div class=\"mixedmark\"></div>\n        </div>\n      </div>\n    \n    </render-block>\n    `;\n    document.body.insertAdjacentElement('beforeend', t);\n  }());\ncustomElements.define(\"mdw-checkbox\", \n      class mdwCheckbox extends HTMLElement {\n        \n    \n   \n    constructor() {\n     super();\n     this.cloneTemplate();\n   }\n    \n\n   connectedCallback() {\n     this.ripple = new MDWRipple({\n       element: this.shadowRoot.querySelector('.ripple'),\n       triggerElement: this.input,\n       radius: 20,\n       centered: true\n     });\n   }\n\n   static get observedAttributes() {\n     return ['checked', 'indeterminate', 'disabled', 'value'];\n   }\n\n   attributeChangedCallback(name, oldValue, newValue) {\n     this[name] = newValue;\n   }\n\n   get input() {\n     if (!this._input) this._input = this.shadowRoot.querySelector('input');\n     return this._input;\n   }\n\n   get value() {\n     return this.input.value;\n   }\n\n   set value(value) {\n     this.input.value = value;\n   }\n\n   get checked() {\n     return this.input.checked;\n   }\n\n   set checked(value) {\n     if (value === '') value = true;\n     this.input.checked = value;\n   }\n\n   get indeterminate() {\n     return this.input.indeterminate;\n   }\n\n   set indeterminate(value) {\n     if (value === '') value = true;\n     this.input.indeterminate = value;\n   }\n\n   set disabled(value) {\n     value = !!value || value === '';\n     if (value) this.input.setAttribute('disabled', 'disabled');\n     else this.input.removeAttribute('disabled');\n   }\n\n   handleChange() {\n     this.dispatchEvent(new CustomEvent('change', this));\n   }\n\n   template() {\n    return html`\n      <div class=\"container\">\n        <input type=\"checkbox\" onchange=\"this.getRootNode().host.handleChange(this)\">\n        <div class=\"ripple checkbox-ripple\"></div>\n        <div class=\"background\">\n          <svg class=\"checkmark\" viewBox=\"0 0 24 24\">\n            <path fill=\"none\" d=\"M1.73,12.91 8.1,19.28 22.79,4.59\" />\n          </svg>\n          <div class=\"mixedmark\"></div>\n        </div>\n      </div>\n    `;\n  }\n\n  cssFile() {\n    return '/src/components/checkbox/internal.css'\n  }\n\n\n    css() { return \"\"; }\n    \n  \n\n        render() {\n          const renderBlock = this.shadowRoot.querySelector('render-block');\n          if (!renderBlock) throw Error('Could not find <render-block>');\n          renderBlock.innerHTML = this.template();\n        }\n\n        cloneTemplate(rerender = false) {\n          var template = document.getElementById('mdw-checkbox');\n          var templateContent = template.content;\n          var shadowRoot = this.shadowRoot ? this.shadowRoot : this.attachShadow({mode: 'open'});\n          var clone = templateContent.cloneNode(true);\n          if (rerender) clone.querySelector('render-block').innerHTML = this.template();\n          shadowRoot.appendChild(clone);\n        }\n      }\n    );\n    });\n  \n\n//# sourceURL=webpack:///./src/components/checkbox/index.js?");

/***/ }),

/***/ "./src/components/circular-progress/index.js":
/*!***************************************************!*\
  !*** ./src/components/circular-progress/index.js ***!
  \***************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("\n    document.addEventListener(\"DOMContentLoaded\", function (event) {\n      (function(){\n    var t=document.createElement('template');\n    t.setAttribute('id','mdw-circular-progress');\n    t.innerHTML=`\n    <style>\n      :host {\n  display: block;\n  position: relative;\n}\n\nsvg {\n  position: absolute;\n  transform: rotate(-90deg);\n  top: 0;\n  left: 0;\n  transform-origin: center;\n  overflow: visible;\n}\n\ncircle {\n  fill: transparent;\n  transform-origin: center;\n  transition: stroke-dashoffset 225ms linear;\n  stroke: var(--mdw-theme-primary);\n}\n\n:host(.white) circle {\n  stroke: white;\n}\n\n:host(.grey) circle {\n  stroke: grey;\n}\n\n:host(.secondary) circle {\n  stroke: var(--mdw-theme-secondary);\n}\n\n:host(.error) circle {\n  stroke: var(--mdw-theme-error);\n}\n\n:host([mode='indeterminate']) {\n  animation: mat-progress-spinner-linear-rotate 2000ms linear infinite;\n}\n\n:host([mode='indeterminate']) circle {\n  transition-property: stroke;\n  animation-duration: 4000ms;\n  animation-timing-function: cubic-bezier(0.35, 0, 0.25, 1);\n  animation-iteration-count: infinite;\n}\n\n@keyframes mat-progress-spinner-linear-rotate {\n  0%       { transform: rotate(0deg); }\n  100%     { transform: rotate(360deg); }\n}\n\n@keyframes mat-progress-spinner-stroke-rotate-100 {\n  0% {\n    stroke-dashoffset: 268.606171575px;\n    transform: rotate(0);\n  }\n  12.5% {\n    stroke-dashoffset: 56.5486677px;\n    transform: rotate(0);\n  }\n  12.5001% {\n    stroke-dashoffset: 56.5486677px;\n    transform: rotateX(180deg) rotate(72.5deg);\n  }\n  25% {\n    stroke-dashoffset: 268.606171575px;\n    transform: rotateX(180deg) rotate(72.5deg);\n  }\n  25.0001% {\n    stroke-dashoffset: 268.606171575px;\n    transform: rotate(270deg);\n  }\n  37.5% {\n    stroke-dashoffset: 56.5486677px;\n    transform: rotate(270deg);\n  }\n  37.5001% {\n    stroke-dashoffset: 56.5486677px;\n    transform: rotateX(180deg) rotate(161.5deg);\n  }\n  50% {\n    stroke-dashoffset: 268.606171575px;\n    transform: rotateX(180deg) rotate(161.5deg);\n  }\n  50.0001% {\n    stroke-dashoffset: 268.606171575px;\n    transform: rotate(180deg);\n  }\n  62.5% {\n    stroke-dashoffset: 56.5486677px;\n    transform: rotate(180deg);\n  }\n  62.5001% {\n    stroke-dashoffset: 56.5486677px;\n    transform: rotateX(180deg) rotate(251.5deg);\n  }\n  75% {\n    stroke-dashoffset: 268.606171575px;\n    transform: rotateX(180deg) rotate(251.5deg);\n  }\n  75.0001% {\n    stroke-dashoffset: 268.606171575px;\n    transform: rotate(90deg);\n  }\n  87.5% {\n    stroke-dashoffset: 56.5486677px;\n    transform: rotate(90deg);\n  }\n  87.5001% {\n    stroke-dashoffset: 56.5486677px;\n    transform: rotateX(180deg) rotate(341.5deg);\n  }\n  100% {\n    stroke-dashoffset: 268.606171575px;\n    transform: rotateX(180deg) rotate(341.5deg);\n  }\n}\n\n    </style>\n    <render-block>\n      \n      <svg style=\"width: undefinedpx; height: undefinedpx;\">\n        <circle\n          cx=\"50%\"\n          cy=\"50%\"\n          r=\"NaN\"\n          style=\"\n            animation-name: mat-progress-spinner-stroke-rotate-undefined;\n            stroke-dasharray: NaNpx;\n            stroke-width: NaN%;\n          \"\n          ></circle>\n      </svg>\n    \n    </render-block>\n    `;\n    document.body.insertAdjacentElement('beforeend', t);\n  }());\ncustomElements.define(\"mdw-circular-progress\", \n      class mdwCircularProgress extends HTMLElement {\n        \n    \n  \n    constructor() {\n    super();\n    this.insertedDiameters = [];\n    this.cloneTemplate();\n  }\n    \n\n  connectedCallback() {\n    this.diameter = this.getAttribute('diameter') || 100;\n    this.render();\n    this.style.width = this.style.height = this.diameter + 'px';\n    if (this.value) this.value = this.value;\n  }\n\n  static get observedAttributes() {\n    return ['value'];\n  }\n\n  attributeChangedCallback(name, oldValue, newValue) {\n    this[name] = newValue;\n  }\n\n  get diameter() {\n    return this._diameter;\n  }\n  set diameter(value) {\n    this._diameter = parseInt((''+value).replace('px', ''));\n    if (!this.insertedDiameters[this._diameter]) {\n      this.insertedDiameters.push(this._diameter);\n      this.shadowRoot.querySelector('style').sheet.insertRule(this._getAnimationText(), 0);\n    }\n  }\n\n  get svg() {\n    if (!this._svg) this._svg = this.shadowRoot.querySelector('svg');\n    return this._svg;\n  }\n\n  get strokeWidth() {\n    return this._strokeWidth || this.diameter / 10;\n  }\n  set strikeWidth(value) {\n    this._strokeWidth = parseInt((''+value).replace('px', ''));\n  }\n\n  get value() {\n    return this.getAttribute('value');\n  }\n  set value(value) {\n    this._value = Math.max(0, Math.min(100, parseInt((''+value).replace('px', ''))));\n    if (this.diameter === undefined) return;\n    this.circle.style.strokeDashoffset = (this._strokeCircumference * (100 - this._value) / 100) + 'px';\n  }\n\n  get mode() {\n    return this.getAttribute('mode') === 'determinate' ? 'determinate' : 'indeterminate';\n  }\n\n  get circle() {\n    if (!this._circle) this._circle = this.shadowRoot.querySelector('circle');\n    return this._circle;\n  }\n\n  get _circleRadius() {\n    return (this.diameter - 10) / 2;\n  }\n\n  get _circleStrokeWidth() {\n    return this.strokeWidth / this.diameter * 100;\n  }\n\n  get _strokeCircumference() {\n    return 2 * Math.PI * this._circleRadius;\n  }\n\n  get INDETERMINATE_ANIMATION_TEMPLATE() {\n    return `\n     @keyframes mat-progress-spinner-stroke-rotate-DIAMETER {\n        0%      { stroke-dashoffset: START_VALUE;  transform: rotate(0); }\n        12.5%   { stroke-dashoffset: END_VALUE;    transform: rotate(0); }\n        12.5001%  { stroke-dashoffset: END_VALUE;    transform: rotateX(180deg) rotate(72.5deg); }\n        25%     { stroke-dashoffset: START_VALUE;  transform: rotateX(180deg) rotate(72.5deg); }\n        25.0001%   { stroke-dashoffset: START_VALUE;  transform: rotate(270deg); }\n        37.5%   { stroke-dashoffset: END_VALUE;    transform: rotate(270deg); }\n        37.5001%  { stroke-dashoffset: END_VALUE;    transform: rotateX(180deg) rotate(161.5deg); }\n        50%     { stroke-dashoffset: START_VALUE;  transform: rotateX(180deg) rotate(161.5deg); }\n        50.0001%  { stroke-dashoffset: START_VALUE;  transform: rotate(180deg); }\n        62.5%   { stroke-dashoffset: END_VALUE;    transform: rotate(180deg); }\n        62.5001%  { stroke-dashoffset: END_VALUE;    transform: rotateX(180deg) rotate(251.5deg); }\n        75%     { stroke-dashoffset: START_VALUE;  transform: rotateX(180deg) rotate(251.5deg); }\n        75.0001%  { stroke-dashoffset: START_VALUE;  transform: rotate(90deg); }\n        87.5%   { stroke-dashoffset: END_VALUE;    transform: rotate(90deg); }\n        87.5001%  { stroke-dashoffset: END_VALUE;    transform: rotateX(180deg) rotate(341.5deg); }\n        100%    { stroke-dashoffset: START_VALUE;  transform: rotateX(180deg) rotate(341.5deg); }\n      }\n    `;\n  }\n\n  _getAnimationText() {\n    return this.INDETERMINATE_ANIMATION_TEMPLATE\n      .replace(/START_VALUE/g, `${0.95 * this._strokeCircumference}`)\n      .replace(/END_VALUE/g, `${0.2 * this._strokeCircumference}`)\n      .replace(/DIAMETER/g, `${this.diameter}`);\n  }\n\n  template() {\n    return html`\n      <svg style=\"width: ${this.diameter}px; height: ${this.diameter}px;\">\n        <circle\n          cx=\"50%\"\n          cy=\"50%\"\n          r=\"${this._circleRadius}\"\n          style=\"\n            animation-name: mat-progress-spinner-stroke-rotate-${this.diameter};\n            stroke-dasharray: ${this._strokeCircumference}px;\n            stroke-width: ${this._circleStrokeWidth}%;\n          \"\n          ></circle>\n      </svg>\n    `;\n  }\n\n  cssFile() {\n    return '/src/components/circular-progress/internal.css'\n  }\n\n\n    css() { return \"\"; }\n    \n  \n\n        render() {\n          const renderBlock = this.shadowRoot.querySelector('render-block');\n          if (!renderBlock) throw Error('Could not find <render-block>');\n          renderBlock.innerHTML = this.template();\n        }\n\n        cloneTemplate(rerender = false) {\n          var template = document.getElementById('mdw-circular-progress');\n          var templateContent = template.content;\n          var shadowRoot = this.shadowRoot ? this.shadowRoot : this.attachShadow({mode: 'open'});\n          var clone = templateContent.cloneNode(true);\n          if (rerender) clone.querySelector('render-block').innerHTML = this.template();\n          shadowRoot.appendChild(clone);\n        }\n      }\n    );\n    });\n  \n\n//# sourceURL=webpack:///./src/components/circular-progress/index.js?");

/***/ }),

/***/ "./src/components/content/external.css":
/*!*********************************************!*\
  !*** ./src/components/content/external.css ***!
  \*********************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("// extracted by mini-css-extract-plugin\n\n//# sourceURL=webpack:///./src/components/content/external.css?");

/***/ }),

/***/ "./src/components/divider/external.css":
/*!*********************************************!*\
  !*** ./src/components/divider/external.css ***!
  \*********************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("// extracted by mini-css-extract-plugin\n\n//# sourceURL=webpack:///./src/components/divider/external.css?");

/***/ }),

/***/ "./src/components/drawer/external.css":
/*!********************************************!*\
  !*** ./src/components/drawer/external.css ***!
  \********************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("// extracted by mini-css-extract-plugin\n\n//# sourceURL=webpack:///./src/components/drawer/external.css?");

/***/ }),

/***/ "./src/components/drawer/index.js":
/*!****************************************!*\
  !*** ./src/components/drawer/index.js ***!
  \****************************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("\n    document.addEventListener(\"DOMContentLoaded\", function (event) {\n      (function(){\n    var t=document.createElement('template');\n    t.setAttribute('id','mdw-drawer');\n    t.innerHTML=`\n    <style>\n      \n    </style>\n    <render-block>\n      \n      <slot></slot>\n    \n    </render-block>\n    `;\n    document.body.insertAdjacentElement('beforeend', t);\n  }());\ncustomElements.define(\"mdw-drawer\", \n      class mdwDrawer extends HTMLElement {\n        \n    \n  \n    constructor() {\n    super();\n    // this.cloneTemplate();\n  }\n    \n\n  connectedCallback() {\n    // window.removeEventListener('resize', this.throttledResizeHandler.bind(this));\n  }\n\n  disconnectedCallback() {\n    // if (!this.fixed) {\n    //   this.scrollTarget.removeEventListener('scroll', this.throttledScrollHandler.bind(this));\n    //   window.removeEventListener('resize', this.throttledResizeHandler.bind(this));\n    // }\n  }\n\n  resizeHandler() {\n    this.isCurrentlyBeingResized = true;\n    const currentHeight = this.height;\n    if (this.topAppBarHeight !== currentHeight) {\n      this.wasDocked = false;\n\n      // Since the top app bar has a different height depending on the screen width, this\n      // will ensure that the top app bar remains in the correct location if\n      // completely hidden and a resize makes the top app bar a different height.\n      this.currentAppBarOffsetTop -= this.topAppBarHeight - currentHeight;\n      this.topAppBarHeight = currentHeight;\n    }\n    this.topAppBarScrollHandler();\n    this.isCurrentlyBeingResized = false;\n  }\n\n  template() {\n    return html`\n      <slot></slot>\n    `;\n  }\n\n  cssFile() {\n    return 'src/components/drawer/internal.css'\n  }\n\n\n    css() { return \"\"; }\n    \n  \n\n        render() {\n          const renderBlock = this.shadowRoot.querySelector('render-block');\n          if (!renderBlock) throw Error('Could not find <render-block>');\n          renderBlock.innerHTML = this.template();\n        }\n\n        cloneTemplate(rerender = false) {\n          var template = document.getElementById('mdw-drawer');\n          var templateContent = template.content;\n          var shadowRoot = this.shadowRoot ? this.shadowRoot : this.attachShadow({mode: 'open'});\n          var clone = templateContent.cloneNode(true);\n          if (rerender) clone.querySelector('render-block').innerHTML = this.template();\n          shadowRoot.appendChild(clone);\n        }\n      }\n    );\n    });\n  \n\n//# sourceURL=webpack:///./src/components/drawer/index.js?");

/***/ }),

/***/ "./src/components/expander/expander-arrow.js":
/*!***************************************************!*\
  !*** ./src/components/expander/expander-arrow.js ***!
  \***************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("\n    document.addEventListener(\"DOMContentLoaded\", function (event) {\n      (function(){\n    var t=document.createElement('template');\n    t.setAttribute('id','mdw-expander-arrow');\n    t.innerHTML=`\n    <style>\n      \n    </style>\n    <render-block>\n      \n    </render-block>\n    `;\n    document.body.insertAdjacentElement('beforeend', t);\n  }());\ncustomElements.define(\"mdw-expander-arrow\", \n      class mdwExpanderArrow extends HTMLElement {\n        \n    \n  \n    constructor() {\n    super();\n  }\n    \n\n  connectedCallback() {\n    this.parentNode.registerArrow(this);\n  }\n\n  open() {\n    this.classList.add('open');\n  }\n\n  close() {\n    this.classList.remove('open');\n  }\n\n\n    css() { return \"\"; }\n    template() { return \"\"; }\n  \n\n        render() {\n          const renderBlock = this.shadowRoot.querySelector('render-block');\n          if (!renderBlock) throw Error('Could not find <render-block>');\n          renderBlock.innerHTML = this.template();\n        }\n\n        cloneTemplate(rerender = false) {\n          var template = document.getElementById('mdw-expander-arrow');\n          var templateContent = template.content;\n          var shadowRoot = this.shadowRoot ? this.shadowRoot : this.attachShadow({mode: 'open'});\n          var clone = templateContent.cloneNode(true);\n          if (rerender) clone.querySelector('render-block').innerHTML = this.template();\n          shadowRoot.appendChild(clone);\n        }\n      }\n    );\n    });\n  \n\n//# sourceURL=webpack:///./src/components/expander/expander-arrow.js?");

/***/ }),

/***/ "./src/components/expander/expander-container.js":
/*!*******************************************************!*\
  !*** ./src/components/expander/expander-container.js ***!
  \*******************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("\n    document.addEventListener(\"DOMContentLoaded\", function (event) {\n      (function(){\n    var t=document.createElement('template');\n    t.setAttribute('id','mdw-expander-container');\n    t.innerHTML=`\n    <style>\n      \n    </style>\n    <render-block>\n      \n    </render-block>\n    `;\n    document.body.insertAdjacentElement('beforeend', t);\n  }());\ncustomElements.define(\"mdw-expander-container\", \n      class mdwExpanderContainer extends HTMLElement {\n        \n    \n  \n    constructor() {\n    super();\n  }\n    \n\n  disconnectedCallback() {\n    if (this.header) this.header.removeEventListener('click', () => this.toggle);\n  }\n\n  registerHeader(header) {\n    this.header = header;\n    this.header.addEventListener('click', () => this.toggle());\n  }\n\n  registerContent(contentElement) {\n    this.contentElement = contentElement;\n  }\n\n  toggle() {\n    // do nothing if there is no content\n    if (!this.contentElement) return;\n    const open = this.classList.contains('open');\n    if (open) {\n      this.classList.remove('open');\n      this.contentElement.close();\n      this.header.close();\n    } else {\n      this.classList.add('open');\n      this.contentElement.open();\n      this.header.open();\n    }\n  }\n\n\n    css() { return \"\"; }\n    template() { return \"\"; }\n  \n\n        render() {\n          const renderBlock = this.shadowRoot.querySelector('render-block');\n          if (!renderBlock) throw Error('Could not find <render-block>');\n          renderBlock.innerHTML = this.template();\n        }\n\n        cloneTemplate(rerender = false) {\n          var template = document.getElementById('mdw-expander-container');\n          var templateContent = template.content;\n          var shadowRoot = this.shadowRoot ? this.shadowRoot : this.attachShadow({mode: 'open'});\n          var clone = templateContent.cloneNode(true);\n          if (rerender) clone.querySelector('render-block').innerHTML = this.template();\n          shadowRoot.appendChild(clone);\n        }\n      }\n    );\n    });\n  \n\n//# sourceURL=webpack:///./src/components/expander/expander-container.js?");

/***/ }),

/***/ "./src/components/expander/expander-content.js":
/*!*****************************************************!*\
  !*** ./src/components/expander/expander-content.js ***!
  \*****************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("\n    document.addEventListener(\"DOMContentLoaded\", function (event) {\n      (function(){\n    var t=document.createElement('template');\n    t.setAttribute('id','mdw-expander-content');\n    t.innerHTML=`\n    <style>\n      \n      :host {\n        display: block;\n        overflow: hidden;\n        opacity: 0;\n        max-height: 0;\n        transition: max-height 0.12s cubic-bezier(0.25, 0.8, 0.25, 1),\n                    opacity 0.12s cubic-bezier(0.25, 0.8, 0.25, 1);\n      }\n\n      :host(.show) {\n        display: block;\n      }\n    \n    </style>\n    <render-block>\n      \n      <slot></slot>\n    \n    </render-block>\n    `;\n    document.body.insertAdjacentElement('beforeend', t);\n  }());\ncustomElements.define(\"mdw-expander-content\", \n      class mdwExpanderContent extends HTMLElement {\n        \n    \n  \n    constructor() {\n    super();\n    this.cloneTemplate();\n  }\n    \n\n  connectedCallback() {\n    if (this.hasAttribute('height')) this.height = this.getAttribute('height').replace('px', '');\n    this.transitionEventName = this.getTransitionEventName();\n    this.parentNode.registerContent(this);\n  }\n\n  static get observedAttributes() {\n    return ['height'];\n  }\n\n  attributeChangedCallback(name, oldValue, newValue) {\n    this[name] = newValue;\n  }\n\n  get height() {\n    return this._height || this.scrollHeight;\n  }\n\n  set height(value) {\n    this._height = value;\n  }\n\n  open() {\n    this.style.display= 'block';\n    this.classList.add('show');\n    this.style.maxHeight = `${this.height}px`;\n    this.style.opacity = 1;\n  }\n\n  close() {\n    this.classList.remove('show');\n    this.style.maxHeight = 0;\n    this.style.opacity = 0;\n    this.onHideComplete();\n  }\n\n  onHideComplete() {\n    const self = this;\n    self.addEventListener(self.transitionEventName, function handler() {\n      self.style.display= 'none';\n      self.removeEventListener(self.transitionEventName, handler);\n    });\n  }\n\n  getTransitionEventName() {\n    const el = document.createElement('fakeelement');\n    const transitions = {\n      transition: 'transitionend',\n      OTransition: 'oTransitionEnd',\n      MozTransition: 'transitionend',\n      WebkitTransition: 'webkitTransitionEnd'\n    };\n\n    for (let t in transitions){\n      if (el.style[t] !== undefined) return transitions[t];\n    }\n  }\n\n  css() {\n    return cssStr`\n      :host {\n        display: block;\n        overflow: hidden;\n        opacity: 0;\n        max-height: 0;\n        transition: max-height 0.12s cubic-bezier(0.25, 0.8, 0.25, 1),\n                    opacity 0.12s cubic-bezier(0.25, 0.8, 0.25, 1);\n      }\n\n      :host(.show) {\n        display: block;\n      }\n    `;\n  }\n\n  template() {\n    return html`\n      <slot></slot>\n    `;\n  }\n\n\n    \n    \n  \n\n        render() {\n          const renderBlock = this.shadowRoot.querySelector('render-block');\n          if (!renderBlock) throw Error('Could not find <render-block>');\n          renderBlock.innerHTML = this.template();\n        }\n\n        cloneTemplate(rerender = false) {\n          var template = document.getElementById('mdw-expander-content');\n          var templateContent = template.content;\n          var shadowRoot = this.shadowRoot ? this.shadowRoot : this.attachShadow({mode: 'open'});\n          var clone = templateContent.cloneNode(true);\n          if (rerender) clone.querySelector('render-block').innerHTML = this.template();\n          shadowRoot.appendChild(clone);\n        }\n      }\n    );\n    });\n  \n\n//# sourceURL=webpack:///./src/components/expander/expander-content.js?");

/***/ }),

/***/ "./src/components/expander/expander-header.js":
/*!****************************************************!*\
  !*** ./src/components/expander/expander-header.js ***!
  \****************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("\n    document.addEventListener(\"DOMContentLoaded\", function (event) {\n      (function(){\n    var t=document.createElement('template');\n    t.setAttribute('id','mdw-expander-header');\n    t.innerHTML=`\n    <style>\n      \n    </style>\n    <render-block>\n      \n    </render-block>\n    `;\n    document.body.insertAdjacentElement('beforeend', t);\n  }());\ncustomElements.define(\"mdw-expander-header\", \n      class mdwExpanderHeader extends HTMLElement {\n        \n    \n  \n    constructor() {\n    super();\n    this.cloneTemplate();\n  }\n    \n\n  connectedCallback() {\n    this.parentNode.registerHeader(this);\n  }\n\n  registerArrow(arrow) {\n    this.arrow = arrow;\n  }\n\n  open() {\n    if (this.arrow) this.arrow.open();\n  }\n\n  close() {\n    if (this.arrow) this.arrow.close();\n  }\n\n  htmtemplatel() {\n    return html`\n      <slot></slot>\n    `;\n  }\n\n\n    css() { return \"\"; }\n    template() { return \"\"; }\n  \n\n        render() {\n          const renderBlock = this.shadowRoot.querySelector('render-block');\n          if (!renderBlock) throw Error('Could not find <render-block>');\n          renderBlock.innerHTML = this.template();\n        }\n\n        cloneTemplate(rerender = false) {\n          var template = document.getElementById('mdw-expander-header');\n          var templateContent = template.content;\n          var shadowRoot = this.shadowRoot ? this.shadowRoot : this.attachShadow({mode: 'open'});\n          var clone = templateContent.cloneNode(true);\n          if (rerender) clone.querySelector('render-block').innerHTML = this.template();\n          shadowRoot.appendChild(clone);\n        }\n      }\n    );\n    });\n  \n\n//# sourceURL=webpack:///./src/components/expander/expander-header.js?");

/***/ }),

/***/ "./src/components/expander/external.css":
/*!**********************************************!*\
  !*** ./src/components/expander/external.css ***!
  \**********************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("// extracted by mini-css-extract-plugin\n\n//# sourceURL=webpack:///./src/components/expander/external.css?");

/***/ }),

/***/ "./src/components/icon/index.js":
/*!**************************************!*\
  !*** ./src/components/icon/index.js ***!
  \**************************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("\n    document.addEventListener(\"DOMContentLoaded\", function (event) {\n      (function(){\n    var t=document.createElement('template');\n    t.setAttribute('id','mdw-icon');\n    t.innerHTML=`\n    <style>\n      :host {\n  background-repeat: no-repeat;\n  display: inline-block;\n  fill: currentColor;\n  height: 24px;\n  width: 24px;\n\n  font-family: 'Material Icons';\n  font-weight: normal;\n  font-style: normal;\n  font-size: 24px;\n  line-height: 1;\n  letter-spacing: normal;\n  text-transform: none;\n  display: inline-block;\n  white-space: nowrap;\n  word-wrap: normal;\n  direction: ltr;\n  -webkit-font-feature-settings: 'liga';\n  -webkit-font-smoothing: antialiased;\n}\n\n\n:host(.primary) {\n  color: var(--mdw-theme-primary);\n}\n\n:host(.secondary) {\n  color: var(--mdw-theme-secondary);\n}\n\n:host(.error) {\n  color: var(--mdw-theme-error);\n}\n\n    </style>\n    <render-block>\n      <slot></slot>\n    </render-block>\n    `;\n    document.body.insertAdjacentElement('beforeend', t);\n  }());\ncustomElements.define(\"mdw-icon\", \n      class mdwIcon extends HTMLElement {\n        \n    \n  \n    constructor() {\n    super();\n    this.cloneTemplate();\n  }\n    \n\n  template() {\n    return '<slot></slot>';\n  }\n\n  cssFile() {\n    return '/src/components/icon/internal.css';\n  }\n\n\n    css() { return \"\"; }\n    \n  \n\n        render() {\n          const renderBlock = this.shadowRoot.querySelector('render-block');\n          if (!renderBlock) throw Error('Could not find <render-block>');\n          renderBlock.innerHTML = this.template();\n        }\n\n        cloneTemplate(rerender = false) {\n          var template = document.getElementById('mdw-icon');\n          var templateContent = template.content;\n          var shadowRoot = this.shadowRoot ? this.shadowRoot : this.attachShadow({mode: 'open'});\n          var clone = templateContent.cloneNode(true);\n          if (rerender) clone.querySelector('render-block').innerHTML = this.template();\n          shadowRoot.appendChild(clone);\n        }\n      }\n    );\n    });\n  \n\n//# sourceURL=webpack:///./src/components/icon/index.js?");

/***/ }),

/***/ "./src/components/linear-progress/index.js":
/*!*************************************************!*\
  !*** ./src/components/linear-progress/index.js ***!
  \*************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("\n    document.addEventListener(\"DOMContentLoaded\", function (event) {\n      (function(){\n    var t=document.createElement('template');\n    t.setAttribute('id','mdw-linear-progress');\n    t.innerHTML=`\n    <style>\n      :host {\n  display: block;\n  position: relative;\n  width: 100%;\n  height: 6px;\n  padding-top: 0;\n  margin-bottom: 0;\n  background-color: #d4e5ff;\n}\n\n.bar {\n  position: absolute;\n  left: 0;\n  top: 0;\n  bottom: 0;\n  width: 100%;\n  height: 6px;\n  background-color: #7499cb;\n}\n\n:host(.query) .bar {\n  transition: all 0.2s linear;\n  animation: query .8s infinite cubic-bezier(0.390, 0.575, 0.565, 1.000);\n}\n\n@keyframes query {\n  0% {\n    opacity: 1;\n    transform: translateX(35%) scale(.3, 1);\n  }\n  100% {\n    opacity: 0;\n    transform: translateX(-50%) scale(0, 1);\n  }\n}\n\n    </style>\n    <render-block>\n      \n      <div class=\"bar\"></div>\n    \n    </render-block>\n    `;\n    document.body.insertAdjacentElement('beforeend', t);\n  }());\ncustomElements.define(\"mdw-linear-progress\", \n      class mdwLinearProgress extends HTMLElement {\n        \n    \n  \n    constructor() {\n    super();\n    this.cloneTemplate();\n  }\n    \n\n  connectedCallback() {\n    if (this.percent === null) this.classList.add('query')\n  }\n\n  static get observedAttributes() {\n    return ['percent'];\n  }\n\n  attributeChangedCallback(name, _oldValue, newValue) {\n    this[name] = newValue;\n  }\n\n  get bar() {\n    if (!this._bar) this._bar = this.shadowRoot.querySelector('.bar');\n    return this._bar;\n  }\n\n  get percent() {\n    return this.getAttribute('percent');\n  }\n\n  set percent(value) {\n    if (value < 0) value = 0;\n    if (value > 100) value = 100;\n    this.bar.style.width = `${value}%`;\n  }\n\n  template() {\n    return html`\n      <div class=\"bar\"></div>\n    `;\n  }\n\n  cssFile() {\n    return '/src/components/linear-progress/internal.css'\n  }\n\n\n    css() { return \"\"; }\n    \n  \n\n        render() {\n          const renderBlock = this.shadowRoot.querySelector('render-block');\n          if (!renderBlock) throw Error('Could not find <render-block>');\n          renderBlock.innerHTML = this.template();\n        }\n\n        cloneTemplate(rerender = false) {\n          var template = document.getElementById('mdw-linear-progress');\n          var templateContent = template.content;\n          var shadowRoot = this.shadowRoot ? this.shadowRoot : this.attachShadow({mode: 'open'});\n          var clone = templateContent.cloneNode(true);\n          if (rerender) clone.querySelector('render-block').innerHTML = this.template();\n          shadowRoot.appendChild(clone);\n        }\n      }\n    );\n    });\n  \n\n//# sourceURL=webpack:///./src/components/linear-progress/index.js?");

/***/ }),

/***/ "./src/components/media/external.css":
/*!*******************************************!*\
  !*** ./src/components/media/external.css ***!
  \*******************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("// extracted by mini-css-extract-plugin\n\n//# sourceURL=webpack:///./src/components/media/external.css?");

/***/ }),

/***/ "./src/components/page/external.css":
/*!******************************************!*\
  !*** ./src/components/page/external.css ***!
  \******************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("// extracted by mini-css-extract-plugin\n\n//# sourceURL=webpack:///./src/components/page/external.css?");

/***/ }),

/***/ "./src/components/text-field/external.css":
/*!************************************************!*\
  !*** ./src/components/text-field/external.css ***!
  \************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("// extracted by mini-css-extract-plugin\n\n//# sourceURL=webpack:///./src/components/text-field/external.css?");

/***/ }),

/***/ "./src/components/text-field/index.js":
/*!********************************************!*\
  !*** ./src/components/text-field/index.js ***!
  \********************************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("\n    document.addEventListener(\"DOMContentLoaded\", function (event) {\n      (function(){\n    var t=document.createElement('template');\n    t.setAttribute('id','mdw-text-field');\n    t.innerHTML=`\n    <style>\n      :host {\n  border-radius: 4px 4px 0 0;\n  display: inline-flex;\n  position: relative;\n  box-sizing: border-box;\n  height: 56px;\n  overflow: hidden;\n  will-change: opacity,transform,color;\n\n  -webkit-tap-highlight-color: rgba(0,0,0,0);\n\n  border-bottom-color: rgba(0,0,0,.12);\n  background-color: #f5f5f5;\n}\n\n:host(.outlined) {\n  background-color: transparent;\n  border: none;\n  overflow: visible;\n}\n\n:host:not(.outlined):after,\n:host:not(.outlined):before {\n  position: absolute;\n  top: -50%;\n  left: -50%;\n  width: 200%;\n  height: 200%;\n  border-radius: 50%;\n  opacity: 0;\n  pointer-events: none;\n  content: \"\";\n  transition: opacity 15ms linear,\n              background-color 15ms linear;\n\n  background-color: rgba(0,0,0,.87);\n}\n\n:host(.focused):not(.outlined):before {\n  transition-duration: 75ms;\n  opacity: 0.12;\n}\n\n::slotted(input) {\n  margin-right: 8px;\n  font-family: Roboto,sans-serif;\n  -moz-osx-font-smoothing: grayscale;\n  -webkit-font-smoothing: antialiased;\n  font-size: 1rem;\n  line-height: 1.75rem;\n  font-weight: 400;\n  letter-spacing: .00937em;\n  text-decoration: inherit;\n  text-transform: inherit;\n  -ms-flex-item-align: end;\n  align-self: flex-end;\n  box-sizing: border-box;\n  width: 100%;\n  height: 100%;\n  padding: 20px 16px 6px;\n  -o-transition: opacity .18s cubic-bezier(.4,0,.2,1);\n  transition: opacity .18s cubic-bezier(.4,0,.2,1);\n  border: none;\n  border-bottom: 1px solid;\n  border-radius: 0;\n  background: none;\n  -webkit-appearance: none;\n  -moz-appearance: none;\n  appearance: none;\n\n  border-bottom-color: rgba(0,0,0,.42);\n  color: rgba(0,0,0,.87);\n  caret-color: var(--mdc-theme-primary);\n}\n\n::slotted(input.outlined) {\n  display: -ms-flexbox;\n  display: flex;\n  padding: 12px 16px 14px;\n  border: none;\n  background-color: transparent;\n  z-index: 1;\n}\n\n:host(.invalid) ::slotted(input) {\n  border-bottom-color: var(--mdw-theme-error);\n}\n\n::slotted(input:focus) {\n  outline: none;\n}\n\n::slotted(label) {\n  font-family: Roboto,sans-serif;\n  -moz-osx-font-smoothing: grayscale;\n  -webkit-font-smoothing: antialiased;\n  font-size: 1rem;\n  line-height: 1.75rem;\n  font-weight: 400;\n  letter-spacing: .00937em;\n  text-decoration: inherit;\n  text-transform: inherit;\n  position: absolute;\n  -webkit-transform-origin: left top;\n  -ms-transform-origin: left top;\n  transform-origin: left top;\n  transition: color .15s cubic-bezier(.4,0,.2,1),-webkit-transform .15s cubic-bezier(.4,0,.2,1);\n  -o-transition: transform .15s cubic-bezier(.4,0,.2,1),color .15s cubic-bezier(.4,0,.2,1);\n  transition: transform .15s cubic-bezier(.4,0,.2,1),color .15s cubic-bezier(.4,0,.2,1);\n  transition: transform .15s cubic-bezier(.4,0,.2,1),color .15s cubic-bezier(.4,0,.2,1),-webkit-transform .15s cubic-bezier(.4,0,.2,1);\n  line-height: 1.15rem;\n  text-align: left;\n  -o-text-overflow: ellipsis;\n  text-overflow: ellipsis;\n  white-space: nowrap;\n  cursor: text;\n  overflow: hidden;\n  will-change: transform;\n\n  left: 16px;\n  right: auto;\n  top: 18px;\n  pointer-events: none;\n\n  color: rgba(0,0,0,.6);\n}\n\n:host(.focused) ::slotted(label),\n:host(.not-empty) ::slotted(label) {\n  cursor: auto;\n  transform: translateY(-50%) scale(.75);\n  color: var(--mdw-theme-primary);\n}\n\n:host(.outlined.focused) ::slotted(label),\n:host(.outlined.not-empty) ::slotted(label) {\n  transform: translateY(-130%) scale(.75);\n}\n\n:host(.invalid) ::slotted(label) {\n  color: var(--mdw-theme-error);\n}\n\n.line-ripple {\n  position: absolute;\n  bottom: 0;\n  left: 0;\n  width: 100%;\n  height: 2px;\n  -webkit-transform: scaleX(0);\n  -ms-transform: scaleX(0);\n  transform: scaleX(0);\n  -webkit-transition: opacity .18s cubic-bezier(.4,0,.2,1),\n                      -webkit-transform .18s cubic-bezier(.4,0,.2,1);\n  transition: opacity .18s cubic-bezier(.4,0,.2,1),\n              -webkit-transform .18s cubic-bezier(.4,0,.2,1);\n  -o-transition: transform .18s cubic-bezier(.4,0,.2,1),\n                  opacity .18s cubic-bezier(.4,0,.2,1);\n  transition: transform .18s cubic-bezier(.4,0,.2,1),\n              opacity .18s cubic-bezier(.4,0,.2,1);\n  transition: transform .18s cubic-bezier(.4,0,.2,1),\n              opacity .18s cubic-bezier(.4,0,.2,1),\n              -webkit-transform .18s cubic-bezier(.4,0,.2,1);\n  opacity: 0;\n  z-index: 2;\n}\n\n:host(.focused) .line-ripple {\n  transform: scaleX(1);\n  opacity: 1;\n}\n\n.line-ripple {\n  background-color: var(--mdw-theme-primary);\n}\n\n:host(.secondary) .line-ripple {\n  background-color: var(--mdw-theme-secondary);\n}\n\n:host(.error) .line-ripple,\n:host(.invalid) .line-ripple {\n  background-color: var(--mdw-theme-error);\n}\n\n\n\n/* --- outline border --- */\n\n.outlined-border-container {\n  display: -ms-flexbox;\n  display: flex;\n  position: absolute;\n  top: 0;\n  right: 0;\n  left: 0;\n  -webkit-box-sizing: border-box;\n  box-sizing: border-box;\n  width: 100%;\n  max-width: 100%;\n  height: 100%;\n  text-align: left;\n  pointer-events: none;\n}\n\n.outlined-leading {\n  border-radius: 4px 0 0 4px;\n  border-left: 1px solid;\n  border-right: none;\n  width: 12px;\n}\n\n.outlined-notch {\n  -ms-flex: 0 0 auto;\n  flex: 0 0 auto;\n  width: auto;\n  max-width: calc(100% - 12px * 2);\n}\n\n.outlined-trailing {\n  border-left: none;\n  border-right: 1px solid;\n  border-radius: 0 4px 4px 0;\n  -ms-flex-positive: 1;\n  flex-grow: 1;\n}\n\n.outlined-leading,\n.outlined-notch,\n.outlined-trailing {\n  box-sizing: border-box;\n  height: 100%;\n  border-top: 1px solid;\n  border-bottom: 1px solid;\n  pointer-events: none;\n\n  border-color: rgba(0,0,0,.24);\n}\n\n:host(.focused) .outlined-leading,\n:host(.focused) .outlined-notch,\n:host(.focused) .outlined-trailing {\n  border-width: 2px;\n  border-color: var(--mdw-theme-primary);\n}\n\n:host(.invalid) .outlined-leading,\n:host(.invalid) .outlined-notch,\n:host(.invalid) .outlined-trailing {\n  border-color: var(--mdw-theme-error);\n}\n\n\n:host(.focused) .outlined-notch,\n:host(.not-empty) .outlined-notch {\n  border-top: none;\n}\n\n    </style>\n    <render-block>\n      \n      <slot></slot>\n      <div class=\"line-ripple\"></div>\n      \n    \n    </render-block>\n    `;\n    document.body.insertAdjacentElement('beforeend', t);\n  }());\ncustomElements.define(\"mdw-text-field\", \n      class mdwTextField extends HTMLElement {\n        \n    \n  \n    constructor() {\n    super();\n    this.outlined = this.hasAttribute('outlined');\n    this.cloneTemplate(true);\n  }\n    \n\n  connectedCallback() {\n    this.valid = this.input.validity.valid;\n    if (this.outlined) this.setOutlined();\n\n    this.input.addEventListener('focus', this.onFocus.bind(this));\n    this.input.addEventListener('blur', this.onBlur.bind(this));\n    this.input.addEventListener('input', this.onInput.bind(this));\n  }\n\n  onFocus(event) {\n    this.classList.add('focused');\n    if (this.outlined) {\n      this.notch.style.width = this.labelWidth + 'px';\n    }\n  }\n\n  onBlur(event) {\n    this.classList.remove('focused');\n    this.classList.toggle('not-empty', !!this.input.value.length);\n    this.valid = this.input.validity.valid;\n    this.classList.toggle('invalid', !this.valid);\n  }\n\n  onInput(event) {\n    if (this.valid !== this.input.validity.valid) {\n      this.valid = this.input.validity.valid;\n      this.classList.toggle('invalid', !this.valid);\n    }\n  }\n\n  get input() {\n    if (!this._input) this._input = this.querySlotted('input');\n    return this._input;\n  }\n\n  get notch() {\n    if (!this._notch) this._notch = this.shadowRoot.querySelector('.outlined-notch');\n    return this._notch;\n  }\n\n  get label() {\n    if (!this._label) this._label = this.querySlotted('label');\n    return this._label;\n  }\n\n  get labelWidth() {\n    return this.label.offsetWidth * 0.9;\n  }\n\n  setOutlined() {\n    this.classList.add('outlined');\n    this.input.classList.add('outlined');\n  }\n\n  template() {\n    return `\n      <slot></slot>\n      ${this.outlined ? '' : '<div class=\"line-ripple\"></div>'}\n      ${!this.outlined ? '' : `\n        <div class=\"outlined-border-container\">\n          <div class=\"outlined-leading\"></div>\n          <div class=\"outlined-notch\"></div>\n          <div class=\"outlined-trailing\"></div>\n        </div>\n      `}\n    `;\n  }\n\n  cssFile() {\n    return '/src/components/text-field/internal.css';\n  }\n\n  querySlotted(selector) {\n    return this.shadowRoot.querySelector('slot').assignedNodes().find(el => el.matches && el.matches(selector));\n  }\n\n\n    css() { return \"\"; }\n    \n  \n\n        render() {\n          const renderBlock = this.shadowRoot.querySelector('render-block');\n          if (!renderBlock) throw Error('Could not find <render-block>');\n          renderBlock.innerHTML = this.template();\n        }\n\n        cloneTemplate(rerender = false) {\n          var template = document.getElementById('mdw-text-field');\n          var templateContent = template.content;\n          var shadowRoot = this.shadowRoot ? this.shadowRoot : this.attachShadow({mode: 'open'});\n          var clone = templateContent.cloneNode(true);\n          if (rerender) clone.querySelector('render-block').innerHTML = this.template();\n          shadowRoot.appendChild(clone);\n        }\n      }\n    );\n    });\n  \n\n//# sourceURL=webpack:///./src/components/text-field/index.js?");

/***/ }),

/***/ "./src/components/top-app-bar/external.css":
/*!*************************************************!*\
  !*** ./src/components/top-app-bar/external.css ***!
  \*************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("// extracted by mini-css-extract-plugin\n\n//# sourceURL=webpack:///./src/components/top-app-bar/external.css?");

/***/ }),

/***/ "./src/components/top-app-bar/index.js":
/*!*********************************************!*\
  !*** ./src/components/top-app-bar/index.js ***!
  \*********************************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("\n    document.addEventListener(\"DOMContentLoaded\", function (event) {\n      (function(){\n    var t=document.createElement('template');\n    t.setAttribute('id','mdw-top-app-bar');\n    t.innerHTML=`\n    <style>\n      \n      :host {\n  background-color: var(--mdw-theme-primary);\n  color: var(--mdw-theme-text--primary);\n  display: flex;\n  position: fixed;\n  flex-direction: column;\n  justify-content: space-between;\n  box-sizing: border-box;\n  width: 100%;\n  z-index: 4;\n}\n\nheader {\n  display: flex;\n  position: relative;\n  box-sizing: border-box;\n  width: 100%;\n  height: 64px;\n}\n\n@media (max-width: 599px) {\n  header {\n    height: 56px;\n  }\n}\n\n    </style>\n    <render-block>\n      \n      <header>\n        <slot></slot>\n      </header>\n    \n    </render-block>\n    `;\n    document.body.insertAdjacentElement('beforeend', t);\n  }());\ncustomElements.define(\"mdw-top-app-bar\", \n      class mdwTopAppBar extends HTMLElement {\n        \n    \n  \n    constructor() {\n    super();\n    this.cloneTemplate();\n\n    this.MAX_TOP_APP_BAR_HEIGHT = 128;\n\n    this.isCurrentlyBeingResized = false;\n    this.currentAppBarOffsetTop = 0;\n    this.wasDocked = true;\n    this.isDockedShowing = true;\n    this.isCurrentlyBeingResized = false;\n  }\n    \n\n  connectedCallback() {\n    this.scrollTarget = this.getScrollTarget();\n    this.lastScrollPosition = this.getViewportScrollY();\n    this.topAppBarHeight = this.height;\n\n    // add spacer to content area\n    // TODO add another class based on prominent, dense\n    if (this.hasContent && !this.scrollTarget.querySelector('.mdw-top-app-bar')) {\n      const div = document.createElement('div');\n      div.classList.add('mdw-top-app-bar')\n      this.scrollTarget.prepend(div);\n    }\n\n    if (!this.fixed) {\n      this.throttledScrollHandler = MDWUtils.rafThrottle(this.scrollHandler);\n      this.throttledResizeHandler = MDWUtils.rafThrottle(this.resizeHandler);\n      this.scrollTarget.addEventListener('scroll', this.throttledScrollHandler.bind(this));\n      window.addEventListener('resize', this.throttledResizeHandler.bind(this));\n    }\n  }\n\n  disconnectedCallback() {\n    if (!this.fixed) {\n      this.scrollTarget.removeEventListener('scroll', this.throttledScrollHandler.bind(this));\n      window.removeEventListener('resize', this.throttledResizeHandler.bind(this));\n    }\n  }\n\n  get fixed() {\n    return this.hasAttribute('fixed');\n  }\n\n  get height() {\n    return this.clientHeight;\n  }\n\n  getScrollTarget() {\n    if (this.parentNode.nodeName === 'MDW-PAGE') {\n      const content = document.querySelector('mdw-content');\n      if (content) {\n        this.hasContent = true;\n        return content;\n      }\n    }\n    return window;\n  }\n\n  topAppBarScrollHandler() {\n    const currentScrollPosition = Math.max(this.getViewportScrollY(), 0);\n    const diff = currentScrollPosition - this.lastScrollPosition;\n    this.lastScrollPosition = currentScrollPosition;\n\n    // If the window is being resized the lastScrollPosition_ needs to be updated but the\n    // current scroll of the top app bar should stay in the same position.\n    if (!this.isCurrentlyBeingResized) {\n      this.currentAppBarOffsetTop -= diff;\n\n      if (this.currentAppBarOffsetTop > 0) {\n        this.currentAppBarOffsetTop = 0;\n      } else if (Math.abs(this.currentAppBarOffsetTop) > this.topAppBarHeight) {\n        this.currentAppBarOffsetTop = -this.topAppBarHeight;\n      }\n\n      this.moveTopAppBar();\n    }\n  }\n\n  moveTopAppBar() {\n    if (this.checkForUpdate()) {\n      // Once the top app bar is fully hidden we use the max potential top app bar height as our offset\n      // so the top app bar doesn't show if the window resizes and the new height > the old height.\n      let offset = this.currentAppBarOffsetTop;\n      if (Math.abs(offset) >= this.topAppBarHeight) {\n        offset = -this.MAX_TOP_APP_BAR_HEIGHT;\n      }\n\n      this.style.top = offset + 'px';\n    }\n  }\n\n  checkForUpdate() {\n    const offscreenBoundaryTop = -this.topAppBarHeight;\n    const hasAnyPixelsOffscreen = this.currentAppBarOffsetTop < 0;\n    const hasAnyPixelsOnscreen = this.currentAppBarOffsetTop > offscreenBoundaryTop;\n    const partiallyShowing = hasAnyPixelsOffscreen && hasAnyPixelsOnscreen;\n\n    // If it's partially showing, it can't be docked.\n    if (partiallyShowing) {\n      this.wasDocked = false;\n    } else {\n      // Not previously docked and not partially showing, it's now docked.\n      if (!this.wasDocked) {\n        this.wasDocked = true;\n        return true;\n      } else if (this.isDockedShowing !== hasAnyPixelsOnscreen) {\n        this.isDockedShowing = hasAnyPixelsOnscreen;\n        return true;\n      }\n    }\n\n    return partiallyShowing;\n  }\n\n  resizeHandler() {\n    this.isCurrentlyBeingResized = true;\n    const currentHeight = this.height;\n    if (this.topAppBarHeight !== currentHeight) {\n      this.wasDocked = false;\n\n      // Since the top app bar has a different height depending on the screen width, this\n      // will ensure that the top app bar remains in the correct location if\n      // completely hidden and a resize makes the top app bar a different height.\n      this.currentAppBarOffsetTop -= this.topAppBarHeight - currentHeight;\n      this.topAppBarHeight = currentHeight;\n    }\n    this.topAppBarScrollHandler();\n    this.isCurrentlyBeingResized = false;\n  }\n\n\n  scrollHandler() {\n    const currentScrollPosition = Math.max(this.getViewportScrollY(), 0);\n    const diff = currentScrollPosition - this.lastScrollPosition;\n    this.lastScrollPosition = currentScrollPosition;\n\n    // If the window is being resized the lastScrollPosition_ needs to be updated but the\n    // current scroll of the top app bar should stay in the same position.\n    if (!this.isCurrentlyBeingResized) {\n      this.currentAppBarOffsetTop -= diff;\n\n      if (this.currentAppBarOffsetTop > 0) {\n        this.currentAppBarOffsetTop = 0;\n      } else if (Math.abs(this.currentAppBarOffsetTop) > this.topAppBarHeight) {\n        this.currentAppBarOffsetTop = -this.topAppBarHeight;\n      }\n\n      this.moveTopAppBar();\n    }\n  }\n\n  getViewportScrollY() {\n    return this.scrollTarget[this.scrollTarget === window ? 'pageYOffset' : 'scrollTop'];\n  }\n\n  template() {\n    return html`\n      <header>\n        <slot></slot>\n      </header>\n    `;\n  }\n\n  cssFile() {\n    return 'src/components/top-app-bar/internal.css'\n  }\n\n\n    css() { return \"\"; }\n    \n  \n\n        render() {\n          const renderBlock = this.shadowRoot.querySelector('render-block');\n          if (!renderBlock) throw Error('Could not find <render-block>');\n          renderBlock.innerHTML = this.template();\n        }\n\n        cloneTemplate(rerender = false) {\n          var template = document.getElementById('mdw-top-app-bar');\n          var templateContent = template.content;\n          var shadowRoot = this.shadowRoot ? this.shadowRoot : this.attachShadow({mode: 'open'});\n          var clone = templateContent.cloneNode(true);\n          if (rerender) clone.querySelector('render-block').innerHTML = this.template();\n          shadowRoot.appendChild(clone);\n        }\n      }\n    );\n    });\n  \n\n//# sourceURL=webpack:///./src/components/top-app-bar/index.js?");

/***/ }),

/***/ "./src/core/Ripple.js":
/*!****************************!*\
  !*** ./src/core/Ripple.js ***!
  \****************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("window.MDWRipple = class MDWRipple {\n  constructor(config = {}) {\n    this.RIPPLE_FADE_IN_DURATION = 200;\n    this.RIPPLE_FADE_OUT_DURATION = 150;\n    this.RIPPLE_STATE = {\n      FADING_IN: 'FADING_IN',\n      VISIBLE: 'VISIBLE',\n      FADING_OUT: 'FADING_OUT',\n      HIDDEN: 'HIDDEN'\n    };\n\n    if (!config.element) throw Error('requires config.element');\n    if (!config.triggerElement) throw Error('requires config.triggerElement');\n\n    this.element = config.element;\n    this.triggerElement = config.triggerElement;\n    this.centered = !!config.centered;\n    this.speedFactor = config.speedFactor || 1;\n    this.radius = config.radius;\n    this.color = config.color || null;\n    this.persistent = !!config.persistent;\n    this.activeRipples = new Set();\n    this.isMousedown = false;\n\n    this.triggerElement.addEventListener('mousedown', this._mousesdown.bind(this));\n  }\n\n  _mousesdown(event) {\n    this.isMousedown = true;\n    this.triggerElement.addEventListener('mouseup', this._mouseup.bind(this));\n    this.triggerElement.addEventListener('mouseleave', this._mouseleave.bind(this));\n    this.fadeInRipple(event.pageX, event.pageY);\n  }\n\n  _mouseup(event) {\n    this.isMousedown = false;\n    // Fade-out all ripples that are completely visible and not persistent.\n    this.activeRipples.forEach(ripple => {\n      if (!ripple.config.persistent && ripple.state === this.RIPPLE_STATE.VISIBLE) ripple.fadeOut();\n    });\n    this.triggerElement.removeEventListener('mouseup', this._mouseup.bind(this));\n    this.triggerElement.removeEventListener('mouseleave', this._mouseleave.bind(this));\n  }\n\n  _mouseleave() {\n    if (this.isMousedown) this._mouseup();\n  }\n\n\n  fadeInRipple(pageX, pageY) {\n    const containerRect = this.element.getBoundingClientRect();\n\n    if (this.centered) {\n      pageX = containerRect.left + containerRect.width / 2;\n      pageY = containerRect.top + containerRect.height / 2;\n    } else {\n      // Subtract scroll values from the coordinates because calculations below\n      // are always relative to the viewport rectangle.\n      const scrollPosition = this.getViewportScrollPosition();\n      pageX -= scrollPosition.left;\n      pageY -= scrollPosition.top;\n    }\n\n    const radius = this.radius || this.distanceToFurthestCorner(pageX, pageY, containerRect);\n    const duration = this.RIPPLE_FADE_IN_DURATION * (1 / this.speedFactor);\n    const offsetX = pageX - containerRect.left;\n    const offsetY = pageY - containerRect.top;\n\n    const ripple = document.createElement('div');\n    ripple.classList.add('ripple-element');\n    ripple.style.left = `${offsetX - radius}px`;\n    ripple.style.top = `${offsetY - radius}px`;\n    ripple.style.height = `${radius * 2}px`;\n    ripple.style.width = `${radius * 2}px`;\n\n    // If the color is not set, the default CSS color will be used.\n    ripple.style.backgroundColor = this.color;\n    ripple.style.transitionDuration = `${duration}ms`;\n\n    this.element.appendChild(ripple);\n\n    // By default the browser does not recalculate the styles of dynamically created\n    // ripple elements. This is critical because then the `scale` would not animate properly.\n    this.enforceStyleRecalculation(ripple);\n\n    ripple.style.transform = 'scale(1)';\n\n    // Exposed reference to the ripple that will be returned.\n    let rippleRef = {\n      config: {\n        centered: this.centered,\n        tiggerElement: this.triggerElement,\n        speedFactor: this.speedFactor,\n        radius: radius,\n        color: this.color,\n        persistent: this.persistent,\n        duration: duration\n      },\n      element: ripple,\n      fadeOut: () => fadeOut(),\n      state: this.RIPPLE_STATE.FADING_IN\n    };\n    const fadeOut = () => {\n      this.fadeOutRipple(rippleRef)\n    };\n\n    // Add the ripple reference to the list of all active ripples.\n    this.activeRipples.add(rippleRef);\n\n    // Wait for the ripple element to be completely faded in.\n    // Once it's faded in, the ripple can be hidden immediately if the mouse is released.\n    setTimeout(() => {\n      rippleRef.state = this.RIPPLE_STATE.VISIBLE;\n      if (!this.persistent && !this.isMousedown) rippleRef.fadeOut();\n    }, duration);\n  }\n\n  fadeOutRipple(rippleRef) {\n    // For ripples that are not active anymore, don't re-un the fade-out animation.\n    if (!this.activeRipples.delete(rippleRef)) return;\n\n    const rippleEl = rippleRef.element;\n\n    rippleEl.style.transitionDuration = `${this.RIPPLE_FADE_OUT_DURATION}ms`;\n    rippleEl.style.opacity = '0';\n    rippleRef.state = this.RIPPLE_STATE.FADING_OUT;\n\n    // Once the ripple faded out, the ripple can be safely removed from the DOM.\n    setTimeout(() => {\n      rippleRef.state = this.RIPPLE_STATE.HIDDEN;\n      rippleEl.parentNode.removeChild(rippleEl);\n    }, this.RIPPLE_FADE_OUT_DURATION);\n  }\n\n  distanceToFurthestCorner(x, y, rect) {\n    const distX = Math.max(Math.abs(x - rect.left), Math.abs(x - rect.right));\n    const distY = Math.max(Math.abs(y - rect.top), Math.abs(y - rect.bottom));\n    return Math.sqrt(distX * distX + distY * distY);\n  }\n\n  getViewportScrollPosition() {\n    const documentRect = document.documentElement.getBoundingClientRect();\n\n    // The top-left-corner of the viewport is determined by the scroll position of the document\n    // body, normally just (scrollLeft, scrollTop). However, Chrome and Firefox disagree about\n    // whether `document.body` or `document.documentElement` is the scrolled element, so reading\n    // `scrollTop` and `scrollLeft` is inconsistent. However, using the bounding rect of\n    // `document.documentElement` works consistently, where the `top` and `left` values will\n    // equal negative the scroll position.\n    const top = -documentRect.top || document.body.scrollTop || window.scrollY || document.documentElement.scrollTop || 0;\n    const left = -documentRect.left || document.body.scrollLeft || window.scrollX || document.documentElement.scrollLeft || 0;\n\n    return {top, left};\n  }\n\n  /** Enforces a style recalculation of a DOM element by computing its styles. */\n  // TODO(devversion): Move into global utility function.\n  enforceStyleRecalculation(element) {\n    // Enforce a style recalculation by calling `getComputedStyle` and accessing any property.\n    // Calling `getPropertyValue` is important to let optimizers know that this is not a noop.\n    // See: https://gist.github.com/paulirish/5d52fb081b3570c81e3a\n    window.getComputedStyle(element).getPropertyValue('opacity');\n  }\n};\n\n\n//# sourceURL=webpack:///./src/core/Ripple.js?");

/***/ }),

/***/ "./src/core/Theme.js":
/*!***************************!*\
  !*** ./src/core/Theme.js ***!
  \***************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("window.MDWTheme = new class MDWTheme {\n  constructor() {\n    this.hexREGEX = /^#?([a-f\\d]{2})([a-f\\d]{2})([a-f\\d]{2})$/i;\n    this.setContrast();\n    this.setPalettes();\n    this.configureVars();\n  }\n\n  setPalettes({ primary, secondary, error } = {}) {\n    this.palettes = {\n      primary: primary || 'deep-purple',\n      secondary: secondary || 'teal',\n      error: error || 'red'\n    };\n  }\n\n  setContrast(contrast = 'light') {\n    this.contrast = contrast;\n  }\n\n  configureVars() {\n    this.setTheme();\n    this.createRGBValues();\n    this.applyContrast();\n    this.createBaseVars();\n  }\n\n  setTheme() {\n    Object.keys(this.palettes).forEach(key => {\n      const colorName = this.palettes[key];\n      this.paletteVars(colorName).forEach(varName => {\n        this.setVar(varName.replace(colorName, key), this.getVar(varName));\n      });\n    });\n  }\n\n  createRGBValues() {\n    this.rgbConversionList().forEach(name => {\n      this.setVar(`${name.replace(`--default`, '')}--rgb`, this.convertToRGB(this.getVar(name)));\n    });\n  }\n\n  applyContrast() {\n    this.contrastList(this.contrast).forEach(name => {\n      this.setVar(name.replace(`--${this.contrast}`, ''), this.getVar(name));\n    });\n  }\n\n  // this will take any var with --default and create a var without default in it\n  // example: --mdw-theme-primary--default -> --mdw-theme-primary\n  createBaseVars() {\n    this.defaultList().forEach(name => {\n      this.setVar(name.replace(`--default`, ''), this.getVar(name));\n    });\n  }\n\n  convertToRGB(hex) {\n    const result = this.hexREGEX.exec(hex.trim());\n    return result ? `${parseInt(result[1], 16)}, ${parseInt(result[2], 16)}, ${parseInt(result[3], 16)}` : null;\n  }\n\n  getVar(name) {\n    return getComputedStyle(document.documentElement).getPropertyValue(name);\n  }\n\n  getAllVars() {\n    return getComputedStyle(document.documentElement);\n  }\n\n  setVar(name, value) {\n    document.documentElement.style.setProperty(name, value);\n  }\n\n  defaultList() {\n    return this.rgbConversionList();\n  }\n\n  rgbConversionList() {\n    return [\n      '--mdw-theme-primary--default',\n      '--mdw-theme-secondary--default',\n      '--mdw-theme-error--default',\n      '--mdw-theme-surface--default',\n      '--mdw-theme-background--default',\n      '--mdw-theme-foreground--default'\n    ];\n  }\n\n  contrastList(contrast) {\n    return [\n      `--mdw-theme-primary--${contrast}--on`,\n      `--mdw-theme-secondary--${contrast}--on`,\n      `--mdw-theme-error--${contrast}--on`,\n      `--mdw-theme-surface--${contrast}--on`,\n      `--mdw-theme-text--primary--${contrast}`,\n      `--mdw-theme-text--secondary--${contrast}`,\n      `--mdw-theme-text--hint--${contrast}`,\n      `--mdw-theme-text--disabled--${contrast}`,\n      `--mdw-theme-text--icon--${contrast}`,\n      `--mdw-theme-divider--${contrast}`\n    ];\n  }\n\n  paletteVars(name) {\n    return [\n        `--mdw-theme-palette--${name}-50`,\n        `--mdw-theme-palette--${name}-100`,\n        `--mdw-theme-palette--${name}-200`,\n        `--mdw-theme-palette--${name}-300`,\n        `--mdw-theme-palette--${name}-400`,\n        `--mdw-theme-palette--${name}-500`,\n        `--mdw-theme-palette--${name}-600`,\n        `--mdw-theme-palette--${name}-700`,\n        `--mdw-theme-palette--${name}-800`,\n        `--mdw-theme-palette--${name}-900`,\n        `--mdw-theme-palette--${name}-A100`,\n        `--mdw-theme-palette--${name}-A200`,\n        `--mdw-theme-palette--${name}-A400`,\n        `--mdw-theme-palette--${name}-A700`,\n        `--mdw-theme-palette--${name}-contrast-50`,\n        `--mdw-theme-palette--${name}-contrast-100`,\n        `--mdw-theme-palette--${name}-contrast-200`,\n        `--mdw-theme-palette--${name}-contrast-300`,\n        `--mdw-theme-palette--${name}-contrast-400`,\n        `--mdw-theme-palette--${name}-contrast-500`,\n        `--mdw-theme-palette--${name}-contrast-600`,\n        `--mdw-theme-palette--${name}-contrast-700`,\n        `--mdw-theme-palette--${name}-contrast-800`,\n        `--mdw-theme-palette--${name}-contrast-900`,\n        `--mdw-theme-palette--${name}-contrast-A100`,\n        `--mdw-theme-palette--${name}-contrast-A200`,\n        `--mdw-theme-palette--${name}-contrast-A400`,\n        `--mdw-theme-palette--${name}-contrast-A700`\n    ];\n  }\n}\n\n\n//# sourceURL=webpack:///./src/core/Theme.js?");

/***/ }),

/***/ "./src/core/Utils.js":
/*!***************************!*\
  !*** ./src/core/Utils.js ***!
  \***************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("window.MDWUtils = new class MDWUtils {\n  constructor() {\n    this._uid = 1;\n  }\n\n  uid() {\n    return `id_${this._uid++}`;\n  }\n\n  debounce(fn, wait) {\n    let timer;\n    return function debounced() {\n      const args = arguments;\n      const context = this\n      clearTimeout(timer);\n      timer = setTimeout(() => {\n        timer = undefined;\n        fn.apply(context, args);\n      }, wait || 10);\n    };\n  }\n\n  throttle(fn, limit) {\n    let alreadyQueued;\n    return function throttled() {\n      const args = arguments;\n      const context = this;\n      if (!alreadyQueued) {\n        alreadyQueued = true;\n        fn.apply(context, args);\n        setTimeout(() => {\n          alreadyQueued = false;\n        }, limit);\n      }\n    };\n  }\n\n  // throttle on request animation frameyy\n  rafThrottle(fn) {\n    let alreadyQueued;\n    return function throttled() {\n      const args = arguments;\n      const context = this;\n      if (!alreadyQueued) {\n        alreadyQueued = true;\n        fn.apply(context, args);\n        requestAnimationFrame(() => {\n          alreadyQueued = false;\n        });\n      }\n    };\n  }\n}\n\n\n//# sourceURL=webpack:///./src/core/Utils.js?");

/***/ }),

/***/ "./src/core/base-theme.css":
/*!*********************************!*\
  !*** ./src/core/base-theme.css ***!
  \*********************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("// extracted by mini-css-extract-plugin\n\n//# sourceURL=webpack:///./src/core/base-theme.css?");

/***/ }),

/***/ "./src/core/core.css":
/*!***************************!*\
  !*** ./src/core/core.css ***!
  \***************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("// extracted by mini-css-extract-plugin\n\n//# sourceURL=webpack:///./src/core/core.css?");

/***/ }),

/***/ "./src/core/elivation.css":
/*!********************************!*\
  !*** ./src/core/elivation.css ***!
  \********************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("// extracted by mini-css-extract-plugin\n\n//# sourceURL=webpack:///./src/core/elivation.css?");

/***/ }),

/***/ "./src/index.js":
/*!**********************!*\
  !*** ./src/index.js ***!
  \**********************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("// css\n__webpack_require__(/*! ./core/base-theme.css */ \"./src/core/base-theme.css\");\n__webpack_require__(/*! ./core/core.css */ \"./src/core/core.css\");\n__webpack_require__(/*! ./core/elivation.css */ \"./src/core/elivation.css\");\n__webpack_require__(/*! ./components/text-field/external.css */ \"./src/components/text-field/external.css\");\n__webpack_require__(/*! ./components/expander/external.css */ \"./src/components/expander/external.css\");\n__webpack_require__(/*! ./components/divider/external.css */ \"./src/components/divider/external.css\");\n__webpack_require__(/*! ./components/top-app-bar/external.css */ \"./src/components/top-app-bar/external.css\");\n__webpack_require__(/*! ./components/drawer/external.css */ \"./src/components/drawer/external.css\");\n__webpack_require__(/*! ./components/body/external.css */ \"./src/components/body/external.css\");\n__webpack_require__(/*! ./components/page/external.css */ \"./src/components/page/external.css\");\n__webpack_require__(/*! ./components/content/external.css */ \"./src/components/content/external.css\");\n__webpack_require__(/*! ./components/media/external.css */ \"./src/components/media/external.css\");\n\n// core\n__webpack_require__(/*! ./core/Ripple */ \"./src/core/Ripple.js\");\n__webpack_require__(/*! ./core/Theme */ \"./src/core/Theme.js\");\n__webpack_require__(/*! ./core/Utils */ \"./src/core/Utils.js\");\n\n// components\n__webpack_require__(/*! ./components/button */ \"./src/components/button/index.js\");\n__webpack_require__(/*! ./components/checkbox */ \"./src/components/checkbox/index.js\");\n__webpack_require__(/*! ./components/icon */ \"./src/components/icon/index.js\");\n__webpack_require__(/*! ./components/text-field */ \"./src/components/text-field/index.js\");\n__webpack_require__(/*! ./components/linear-progress */ \"./src/components/linear-progress/index.js\");\n__webpack_require__(/*! ./components/circular-progress */ \"./src/components/circular-progress/index.js\");\n__webpack_require__(/*! ./components/expander/expander-container */ \"./src/components/expander/expander-container.js\");\n__webpack_require__(/*! ./components/expander/expander-header */ \"./src/components/expander/expander-header.js\");\n__webpack_require__(/*! ./components/expander/expander-content */ \"./src/components/expander/expander-content.js\");\n__webpack_require__(/*! ./components/expander/expander-arrow */ \"./src/components/expander/expander-arrow.js\");\n__webpack_require__(/*! ./components/top-app-bar */ \"./src/components/top-app-bar/index.js\");\n__webpack_require__(/*! ./components/drawer */ \"./src/components/drawer/index.js\");\n\n\n//# sourceURL=webpack:///./src/index.js?");

/***/ })

/******/ });