.container {
  -ms-flex: 0 0 18px;
  -webkit-tap-highlight-color: rgba(0, 0, 0, 0);
  -webkit-box-sizing: content-box;
  box-sizing: content-box;
  cursor: pointer;
  display: inline-block;
  flex: 0 0 18px;
  height: 18px;
  line-height: 0;
  padding: 11px;
  position: relative;
  vertical-align: bottom;
  white-space: nowrap;
  width: 18px;
  will-change: transform, opacity;
}

.container::before,
.container::after {
  position: absolute;
  border-radius: 50%;
  opacity: 0;
  pointer-events: none;
  content: "";
  top: calc(50% - 50%);
  left: calc(50% - 50%);
  width: 100%;
  height: 100%;
}

.container::before {
  -webkit-transition: opacity 15ms linear, background-color 15ms linear;
  -o-transition: opacity 15ms linear, background-color 15ms linear;
  transition: opacity 15ms linear, background-color 15ms linear;
  z-index: 1;
}

.container:hover::before {
  opacity: 0.04;
}

.background::before {
  position: absolute;
  top: 0;
  right: 0;
  bottom: 0;
  left: 0;
  width: 100%;
  height: 100%;
  -webkit-transform: scale(0, 0);
      -ms-transform: scale(0, 0);
          transform: scale(0, 0);
  -webkit-transition: opacity 90ms 0ms cubic-bezier(0.4, 0, 0.6, 1), -webkit-transform 90ms 0ms cubic-bezier(0.4, 0, 0.6, 1);
  transition: opacity 90ms 0ms cubic-bezier(0.4, 0, 0.6, 1), -webkit-transform 90ms 0ms cubic-bezier(0.4, 0, 0.6, 1);
  -o-transition: opacity 90ms 0ms cubic-bezier(0.4, 0, 0.6, 1), transform 90ms 0ms cubic-bezier(0.4, 0, 0.6, 1);
  transition: opacity 90ms 0ms cubic-bezier(0.4, 0, 0.6, 1), transform 90ms 0ms cubic-bezier(0.4, 0, 0.6, 1);
  transition: opacity 90ms 0ms cubic-bezier(0.4, 0, 0.6, 1), transform 90ms 0ms cubic-bezier(0.4, 0, 0.6, 1), -webkit-transform 90ms 0ms cubic-bezier(0.4, 0, 0.6, 1);
  border-radius: 50%;
  opacity: 0;
  pointer-events: none;
  content: "";
  will-change: opacity, transform;
}

.background {
  left: 11px;
  right: initial;
  display: -ms-inline-flexbox;
  display: inline-flex;
  position: absolute;
  top: 11px;
  bottom: 0;
  -ms-flex-align: center;
      align-items: center;
  -ms-flex-pack: center;
      justify-content: center;
  -webkit-box-sizing: border-box;
          box-sizing: border-box;
  width: 45%;
  height: 45%;
  -webkit-transition: background-color 90ms 0ms cubic-bezier(0.4, 0, 0.6, 1), border-color 90ms 0ms cubic-bezier(0.4, 0, 0.6, 1);
  -o-transition: background-color 90ms 0ms cubic-bezier(0.4, 0, 0.6, 1), border-color 90ms 0ms cubic-bezier(0.4, 0, 0.6, 1);
  transition: background-color 90ms 0ms cubic-bezier(0.4, 0, 0.6, 1), border-color 90ms 0ms cubic-bezier(0.4, 0, 0.6, 1);
  border: 2px solid currentColor;
  border-radius: 2px;
  background-color: transparent;
  pointer-events: none;
  will-change: background-color, border-color;
}

.container[dir="rtl"] .background,
[dir="rtl"] .container .background {
  left: initial;
  right: 11px;
}

.checkmark {
  position: absolute;
  top: 0;
  right: 0;
  bottom: 0;
  left: 0;
  width: 100%;
  -webkit-transition: opacity 180ms 0ms cubic-bezier(0.4, 0, 0.6, 1);
  -o-transition: opacity 180ms 0ms cubic-bezier(0.4, 0, 0.6, 1);
  transition: opacity 180ms 0ms cubic-bezier(0.4, 0, 0.6, 1);
  opacity: 0;
  color: #fff;
}

.mixedmark {
  width: 100%;
  height: 0;
  -webkit-transform: scaleX(0) rotate(0deg);
      -ms-transform: scaleX(0) rotate(0deg);
          transform: scaleX(0) rotate(0deg);
  -webkit-transition: opacity 90ms 0ms cubic-bezier(0.4, 0, 0.6, 1), -webkit-transform 90ms 0ms cubic-bezier(0.4, 0, 0.6, 1);
  transition: opacity 90ms 0ms cubic-bezier(0.4, 0, 0.6, 1), -webkit-transform 90ms 0ms cubic-bezier(0.4, 0, 0.6, 1);
  -o-transition: opacity 90ms 0ms cubic-bezier(0.4, 0, 0.6, 1), transform 90ms 0ms cubic-bezier(0.4, 0, 0.6, 1);
  transition: opacity 90ms 0ms cubic-bezier(0.4, 0, 0.6, 1), transform 90ms 0ms cubic-bezier(0.4, 0, 0.6, 1);
  transition: opacity 90ms 0ms cubic-bezier(0.4, 0, 0.6, 1), transform 90ms 0ms cubic-bezier(0.4, 0, 0.6, 1), -webkit-transform 90ms 0ms cubic-bezier(0.4, 0, 0.6, 1);
  border-width: 1px;
  border-style: solid;
  opacity: 0;
  border-color: #fff;
}

@media screen and (-ms-high-contrast: active) {
  .mixedmark {
    margin: 0 1px;
  }
}

path {
  -webkit-transition: stroke-dashoffset 180ms 0ms cubic-bezier(0.4, 0, 0.6, 1);
  -o-transition: stroke-dashoffset 180ms 0ms cubic-bezier(0.4, 0, 0.6, 1);
  transition: stroke-dashoffset 180ms 0ms cubic-bezier(0.4, 0, 0.6, 1);
  stroke: currentColor;
  stroke-width: 3.12px;
  stroke-dashoffset: 29.78334;
  stroke-dasharray: 29.78334;
}

input {
  position: absolute;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  margin: 0;
  padding: 0;
  opacity: 0;
  cursor: inherit;
}

input:enabled:not(:checked):not(:indeterminate) ~ .background {
  border-color: rgba(0, 0, 0, 0.54);
  background-color: transparent;
}

input:disabled:not(:checked):not(:indeterminate) ~ .background {
  border-color: rgba(0, 0, 0, 0.26);
}

input:disabled:checked ~ .background,
input:disabled:indeterminate ~ .background {
  border-color: transparent;
  background-color: rgba(0, 0, 0, 0.26);
}

input:checked ~ .background,
input:indeterminate ~ .background {
  -webkit-transition: border-color 90ms 0ms cubic-bezier(0, 0, 0.2, 1), background-color 90ms 0ms cubic-bezier(0, 0, 0.2, 1);
  -o-transition: border-color 90ms 0ms cubic-bezier(0, 0, 0.2, 1), background-color 90ms 0ms cubic-bezier(0, 0, 0.2, 1);
  transition: border-color 90ms 0ms cubic-bezier(0, 0, 0.2, 1), background-color 90ms 0ms cubic-bezier(0, 0, 0.2, 1);
}

input:checked ~ .background path,
input:indeterminate ~ .background path {
  stroke-dashoffset: 0;
}

input:focus ~ .background::before {
  -webkit-transform: scale(2.75, 2.75);
      -ms-transform: scale(2.75, 2.75);
          transform: scale(2.75, 2.75);
  -webkit-transition: opacity 80ms 0ms cubic-bezier(0, 0, 0.2, 1), -webkit-transform 80ms 0ms cubic-bezier(0, 0, 0.2, 1);
  transition: opacity 80ms 0ms cubic-bezier(0, 0, 0.2, 1), -webkit-transform 80ms 0ms cubic-bezier(0, 0, 0.2, 1);
  -o-transition: opacity 80ms 0ms cubic-bezier(0, 0, 0.2, 1), transform 80ms 0ms cubic-bezier(0, 0, 0.2, 1);
  transition: opacity 80ms 0ms cubic-bezier(0, 0, 0.2, 1), transform 80ms 0ms cubic-bezier(0, 0, 0.2, 1);
  transition: opacity 80ms 0ms cubic-bezier(0, 0, 0.2, 1), transform 80ms 0ms cubic-bezier(0, 0, 0.2, 1), -webkit-transform 80ms 0ms cubic-bezier(0, 0, 0.2, 1);
  opacity: 0.12;
}

input:disabled {
  cursor: default;
  pointer-events: none;
}

input:checked ~ .background .checkmark {
  -webkit-transition: opacity 180ms 0ms cubic-bezier(0, 0, 0.2, 1), -webkit-transform 180ms 0ms cubic-bezier(0, 0, 0.2, 1);
  transition: opacity 180ms 0ms cubic-bezier(0, 0, 0.2, 1), -webkit-transform 180ms 0ms cubic-bezier(0, 0, 0.2, 1);
  -o-transition: opacity 180ms 0ms cubic-bezier(0, 0, 0.2, 1), transform 180ms 0ms cubic-bezier(0, 0, 0.2, 1);
  transition: opacity 180ms 0ms cubic-bezier(0, 0, 0.2, 1), transform 180ms 0ms cubic-bezier(0, 0, 0.2, 1);
  transition: opacity 180ms 0ms cubic-bezier(0, 0, 0.2, 1), transform 180ms 0ms cubic-bezier(0, 0, 0.2, 1), -webkit-transform 180ms 0ms cubic-bezier(0, 0, 0.2, 1);
  opacity: 1;
}

input:checked ~ .background .mixedmark {
  -webkit-transform: scaleX(1) rotate(-45deg);
      -ms-transform: scaleX(1) rotate(-45deg);
          transform: scaleX(1) rotate(-45deg);
}

input:indeterminate ~ .background .checkmark {
  -webkit-transform: rotate(45deg);
      -ms-transform: rotate(45deg);
          transform: rotate(45deg);
  -webkit-transition: opacity 90ms 0ms cubic-bezier(0.4, 0, 0.6, 1), -webkit-transform 90ms 0ms cubic-bezier(0.4, 0, 0.6, 1);
  transition: opacity 90ms 0ms cubic-bezier(0.4, 0, 0.6, 1), -webkit-transform 90ms 0ms cubic-bezier(0.4, 0, 0.6, 1);
  -o-transition: opacity 90ms 0ms cubic-bezier(0.4, 0, 0.6, 1), transform 90ms 0ms cubic-bezier(0.4, 0, 0.6, 1);
  transition: opacity 90ms 0ms cubic-bezier(0.4, 0, 0.6, 1), transform 90ms 0ms cubic-bezier(0.4, 0, 0.6, 1);
  transition: opacity 90ms 0ms cubic-bezier(0.4, 0, 0.6, 1), transform 90ms 0ms cubic-bezier(0.4, 0, 0.6, 1), -webkit-transform 90ms 0ms cubic-bezier(0.4, 0, 0.6, 1);
  opacity: 0;
}

input:indeterminate ~ .background .mixedmark {
  -webkit-transform: scaleX(1) rotate(0deg);
      -ms-transform: scaleX(1) rotate(0deg);
          transform: scaleX(1) rotate(0deg);
  opacity: 1;
}



/* --- Ripple --- */
.ripple {
  overflow: hidden;
}

.ripple.ripple-unbounded {
  overflow: visible;
}

.ripple-element {
  position: absolute;
  border-radius: 50%;
  pointer-events: none;
  transition: opacity, transform 0ms cubic-bezier(0, 0, 0.2, 1);
  transform: scale(0)
}

.checkbox-ripple {
  position: absolute;
  left: 0;
  top: 0;
  right: 0;
  bottom: 0;
  border-radius: 50%;
  z-index: 1;
  pointer-events: none;
}


/* --- theme --- */

/* basic */
.container::before,
.container::after {
  background-color: var(--mdw-theme-secondary-default);
}

.ripple-element {
  background-color: rgba(var(--mdw-theme-secondary-default--rgb), 0.16);
}

input:enabled:checked ~ .background,
input:enabled:indeterminate ~ .background {
  border-color: var(--mdw-theme-secondary-default);
  background-color: var(--mdw-theme-secondary-default);
}

/* primary */
:host(.primary) .container::before,
:host(.primary) .container::after {
  background-color: var(--mdw-theme-primary-default);
}

:host(.primary) .ripple-element {
  background-color: rgba(var(--mdw-theme-primary-default--rgb), 0.16);
}

:host(.primary) input:enabled:checked ~ .background,
:host(.primary) input:enabled:indeterminate ~ .background {
  border-color: var(--mdw-theme-primary-default);
  background-color: var(--mdw-theme-primary-default);
}

/* error */
:host(.error) .container::before,
:host(.error) .container::after {
  background-color: var(--mdw-theme-error-default);
}

:host(.error) .ripple-element {
  background-color: rgba(var(--mdw-theme-error-default--rgb), 0.16);
}

:host(.error) input:enabled:checked ~ .background,
:host(.error) input:enabled:indeterminate ~ .background {
  border-color: var(--mdw-theme-error-default);
  background-color: var(--mdw-theme-error-default);
}
